"tactic","type","technique","subtechnique","id","url","description"
"Initial Access","tactic",,,"TA0001","https://attack.mitre.org/tactics/TA0001/","The adversary is trying to get into your network. Initial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords."
"Initial Access","technique","Drive-by Compromise",,"T1189","https://attack.mitre.org/techniques/T1189","Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token."
"Initial Access","technique","Exploit Public-Facing Application",,"T1190","https://attack.mitre.org/techniques/T1190","Adversaries may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. The weakness in the system can be a bug, a glitch, or a design vulnerability. These applications are often websites, but can include databases (like SQL), standard services (like SMB or SSH), and any other applications with Internet accessible open sockets, such as web servers and related services. Depending on the flaw being exploited this may include Exploitation for Defense Evasion."
"Initial Access","technique","External Remote Services",,"T1133","https://attack.mitre.org/techniques/T1133","Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as Windows Remote Management can also be used externally."
"Initial Access","technique","Hardware Additions",,"T1200","https://attack.mitre.org/techniques/T1200","Adversaries may introduce computer accessories, computers, or networking hardware into a system or network that can be used as a vector to gain access. While public references of usage by APT groups are scarce, many penetration testers leverage hardware additions for initial access. Commercial and open source products are leveraged with capabilities such as passive network tapping , man-in-the middle encryption breaking , keystroke injection , kernel memory reading via DMA , adding new wireless access to an existing network , and others."
"Initial Access","technique","Phishing",,"T1566","https://attack.mitre.org/techniques/T1566","Adversaries may send phishing messages to elicit sensitive information and/or gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns."
"Initial Access","subtechnique","Phishing","Spearphishing Attachment","T1566.001","https://attack.mitre.org/techniques/T1566/001","Adversaries may send spearphishing emails with a malicious attachment in an attempt to elicit sensitive information and/or gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution."
"Initial Access","subtechnique","Phishing","Spearphishing Link","T1566.002","https://attack.mitre.org/techniques/T1566/002","Adversaries may send spearphishing emails with a malicious link in an attempt to elicit sensitive information and/or gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments."
"Initial Access","subtechnique","Phishing","Spearphishing via Service","T1566.003","https://attack.mitre.org/techniques/T1566/003","Adversaries may send spearphishing messages via third-party services in an attempt to elicit sensitive information and/or gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. "
"Initial Access","technique","Replication Through Removable Media",,"T1091","https://attack.mitre.org/techniques/T1091","Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself."
"Initial Access","technique","Supply Chain Compromise",,"T1195","https://attack.mitre.org/techniques/T1195","Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise."
"Initial Access","subtechnique","Supply Chain Compromise","Compromise Software Dependencies and Development Tools ","T1195.001","https://attack.mitre.org/techniques/T1195/001","Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency. "
"Initial Access","subtechnique","Supply Chain Compromise","Compromise Software Supply Chain ","T1195.002","https://attack.mitre.org/techniques/T1195/002","Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version."
"Initial Access","subtechnique","Supply Chain Compromise","Compromise Hardware Supply Chain ","T1195.003","https://attack.mitre.org/techniques/T1195/003","Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals."
"Initial Access","technique","Trusted Relationship",,"T1199","https://attack.mitre.org/techniques/T1199","Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network."
"Initial Access","technique","Valid Accounts",,"T1078","https://attack.mitre.org/techniques/T1078","Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence."
"Initial Access","subtechnique","Valid Accounts","Default Accounts","T1078.001","https://attack.mitre.org/techniques/T1078/001","Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices."
"Initial Access","subtechnique","Valid Accounts","Domain Accounts","T1078.002","https://attack.mitre.org/techniques/T1078/002","Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services."
"Initial Access","subtechnique","Valid Accounts","Local Accounts","T1078.003","https://attack.mitre.org/techniques/T1078/003","Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
"Initial Access","subtechnique","Valid Accounts","Cloud Accounts","T1078.004","https://attack.mitre.org/techniques/T1078/004","Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory."
"Execution","tactic",,,"TA0002","https://attack.mitre.org/tactics/TA0002/","The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery."
"Execution","technique","Command and Scripting Interpreter",,"T1059","https://attack.mitre.org/techniques/T1059","Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell."
"Execution","subtechnique","Command and Scripting Interpreter","PowerShell","T1059.001","https://attack.mitre.org/techniques/T1059/001","Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems)."
"Execution","subtechnique","Command and Scripting Interpreter","AppleScript","T1059.002","https://attack.mitre.org/techniques/T1059/002","Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be easily scripted with AppleScript for local or remote execution."
"Execution","subtechnique","Command and Scripting Interpreter","Windows Command Shell","T1059.003","https://attack.mitre.org/techniques/T1059/003","Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd.exe) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands."
"Execution","subtechnique","Command and Scripting Interpreter","Unix Shell","T1059.004","https://attack.mitre.org/techniques/T1059/004","Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges."
"Execution","subtechnique","Command and Scripting Interpreter","Visual Basic","T1059.005","https://attack.mitre.org/techniques/T1059/005","Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core."
"Execution","subtechnique","Command and Scripting Interpreter","Python","T1059.006","https://attack.mitre.org/techniques/T1059/006","Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables."
"Execution","subtechnique","Command and Scripting Interpreter","JavaScript/JScript","T1059.007","https://attack.mitre.org/techniques/T1059/007","Adversaries may abuse JavaScript and/or JScript for execution. JavaScript (JS) is a platform-agnostic scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser."
"Execution","technique","Exploitation for Client Execution",,"T1203","https://attack.mitre.org/techniques/T1203","Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility."
"Execution","technique","Inter-Process Communication",,"T1559","https://attack.mitre.org/techniques/T1559","Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. "
"Execution","subtechnique","Inter-Process Communication","Component Object Model","T1559.001","https://attack.mitre.org/techniques/T1559/001","Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE)."
"Execution","subtechnique","Inter-Process Communication","Dynamic Data Exchange","T1559.002","https://attack.mitre.org/techniques/T1559/002","Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution."
"Execution","technique","Native API",,"T1106","https://attack.mitre.org/techniques/T1106","Adversaries may directly interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations."
"Execution","technique","Scheduled Task/Job",,"T1053","https://attack.mitre.org/techniques/T1053","Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system."
"Execution","subtechnique","Scheduled Task/Job","At (Linux)","T1053.001","https://attack.mitre.org/techniques/T1053/001","Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks."
"Execution","subtechnique","Scheduled Task/Job","At (Windows)","T1053.002","https://attack.mitre.org/techniques/T1053/002","Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group."
"Execution","subtechnique","Scheduled Task/Job","Cron","T1053.003","https://attack.mitre.org/techniques/T1053/003","Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code. The cron utility is a time-based job scheduler for Unix-like operating systems. The crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths."
"Execution","subtechnique","Scheduled Task/Job","Launchd","T1053.004","https://attack.mitre.org/techniques/T1053/004","Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code. The launchd daemon, native to macOS, is responsible for loading and maintaining services within the operating system. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in /System/Library/LaunchDaemons and /Library/LaunchDaemons . These LaunchDaemons have property list files which point to the executables that will be launched."
"Execution","subtechnique","Scheduled Task/Job","Scheduled Task","T1053.005","https://attack.mitre.org/techniques/T1053/005","Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task."
"Execution","technique","Shared Modules",,"T1129","https://attack.mitre.org/techniques/T1129","Adversaries may abuse shared modules to execute malicious payloads. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like CreateProcess, LoadLibrary, etc. of the Win32 API."
"Execution","technique","Software Deployment Tools",,"T1072","https://attack.mitre.org/techniques/T1072","Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, VNC, HBSS, Altiris, etc.)."
"Execution","technique","System Services",,"T1569","https://attack.mitre.org/techniques/T1569","Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services. Many services are set to run at boot, which can aid in achieving persistence (Create or Modify System Process), but adversaries can also abuse services for one-time or temporary execution."
"Execution","subtechnique","System Services","Launchctl","T1569.001","https://attack.mitre.org/techniques/T1569/001","Adversaries may abuse launchctl to execute commands or programs. Launchctl controls the macOS launchd process, which handles things like Launch Agents and Launch Daemons, but can execute other commands or programs itself. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input."
"Execution","subtechnique","System Services","Service Execution","T1569.002","https://attack.mitre.org/techniques/T1569/002","Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net."
"Execution","technique","User Execution",,"T1204","https://attack.mitre.org/techniques/T1204","An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of Phishing."
"Execution","subtechnique","User Execution","Malicious Link","T1204.001","https://attack.mitre.org/techniques/T1204/001","An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File."
"Execution","subtechnique","User Execution","Malicious File","T1204.002","https://attack.mitre.org/techniques/T1204/002","An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl."
"Execution","technique","Windows Management Instrumentation",,"T1047","https://attack.mitre.org/techniques/T1047","Adversaries may abuse Windows Management Instrumentation (WMI) to achieve execution. WMI is a Windows administration feature that provides a uniform environment for local and remote access to Windows system components. It relies on the WMI service for local and remote access and the server message block (SMB) and Remote Procedure Call Service (RPCS) for remote access. RPCS operates over port 135. "
"Persistence","tactic",,,"TA0003","https://attack.mitre.org/tactics/TA0003/","The adversary is trying to maintain their foothold. Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code."
"Persistence","technique","Account Manipulation",,"T1098","https://attack.mitre.org/techniques/T1098","Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain."
"Persistence","subtechnique","Account Manipulation","Additional Azure Service Principal Credentials","T1098.001","https://attack.mitre.org/techniques/T1098/001","Adversaries may add adversary-controlled credentials for Azure Service Principals in addition to existing legitimate credentials to maintain persistent access to victim Azure accounts. Azure Service Principals support both password and certificate credentials. With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules."
"Persistence","subtechnique","Account Manipulation","Exchange Email Delegate Permissions","T1098.002","https://attack.mitre.org/techniques/T1098/002","Adversaries may grant additional permission levels, such as ReadPermission or FullAccess, to maintain persistent access to an adversary-controlled email account. The Add-MailboxPermission PowerShell cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox."
"Persistence","subtechnique","Account Manipulation","Add Office 365 Global Administrator Role","T1098.003","https://attack.mitre.org/techniques/T1098/003","An adversary may add the Global Administrator role to an adversary-controlled account to maintain persistent access to an Office 365 tenant. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins) via the global admin role."
"Persistence","subtechnique","Account Manipulation","SSH Authorized Keys","T1098.004","https://attack.mitre.org/techniques/T1098/004","Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The authorized_keys file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <user-home>/.ssh/authorized_keys. Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value ""yes"" to ensure public key and RSA authentication are enabled. The SSH config file is usually located under /etc/ssh/sshd_config."
"Persistence","technique","BITS Jobs",,"T1197","https://attack.mitre.org/techniques/T1197","Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through Component Object Model (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations."
"Persistence","technique","Boot or Logon Autostart Execution",,"T1547","https://attack.mitre.org/techniques/T1547","Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.  These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Registry Run Keys / Startup Folder","T1547.001","https://attack.mitre.org/techniques/T1547/001","Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Authentication Package","T1547.002","https://attack.mitre.org/techniques/T1547/002","Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. "
"Persistence","subtechnique","Boot or Logon Autostart Execution","Time Providers","T1547.003","https://attack.mitre.org/techniques/T1547/003","Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Winlogon Helper DLL","T1547.004","https://attack.mitre.org/techniques/T1547/004","Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[\Wow6432Node\]\Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. "
"Persistence","subtechnique","Boot or Logon Autostart Execution","Security Support Provider","T1547.005","https://attack.mitre.org/techniques/T1547/005","Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Kernel Modules and Extensions","T1547.006","https://attack.mitre.org/techniques/T1547/006","Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Re-opened Applications","T1547.007","https://attack.mitre.org/techniques/T1547/007","Adversaries may modify plist files to automatically run an application when a user logs in. Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user logs into their machine after reboot. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at ~/Library/Preferences/com.apple.loginwindow.plist and ~/Library/Preferences/ByHost/com.apple.loginwindow.* .plist. "
"Persistence","subtechnique","Boot or Logon Autostart Execution","LSASS Driver","T1547.008","https://attack.mitre.org/techniques/T1547/008","Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Shortcut Modification","T1547.009","https://attack.mitre.org/techniques/T1547/009","Adversaries may create or edit shortcuts to run a program during system boot or user login. Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Port Monitors","T1547.010","https://attack.mitre.org/techniques/T1547/010","Adversaries may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup. This DLL can be located in C:\Windows\System32 and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors."
"Persistence","subtechnique","Boot or Logon Autostart Execution","Plist Modification","T1547.011","https://attack.mitre.org/techniques/T1547/011","Adversaries may modify plist files to run a program during system boot or user login. Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as /Library/Preferences (which execute with elevated privileges) and ~/Library/Preferences (which execute with a user's privileges). "
"Persistence","technique","Boot or Logon Initialization Scripts",,"T1037","https://attack.mitre.org/techniques/T1037","Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely."
"Persistence","subtechnique","Boot or Logon Initialization Scripts","Logon Script (Windows)","T1037.001","https://attack.mitre.org/techniques/T1037/001","Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to the HKCU\Environment\UserInitMprLogonScript Registry key."
"Persistence","subtechnique","Boot or Logon Initialization Scripts","Logon Script (Mac)","T1037.002","https://attack.mitre.org/techniques/T1037/002","Adversaries may use macOS logon scripts automatically executed at logon initialization to establish persistence. macOS allows logon scripts (known as login hooks) to be executed whenever a specific user logs into a system. A login hook tells Mac OS X to execute a certain script when a user logs in, but unlike Startup Items, a login hook executes as the elevated root user."
"Persistence","subtechnique","Boot or Logon Initialization Scripts","Network Logon Script","T1037.003","https://attack.mitre.org/techniques/T1037/003","Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects. These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems. "
"Persistence","subtechnique","Boot or Logon Initialization Scripts","Rc.common","T1037.004","https://attack.mitre.org/techniques/T1037/004","Adversaries may use rc.common automatically executed at boot initialization to establish persistence. During the boot process, macOS executes source /etc/rc.common, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings and is thus recommended to include in the start of Startup Item Scripts . In macOS and OS X, this is now a deprecated mechanism in favor of Launch Agent and Launch Daemon but is currently still used."
"Persistence","subtechnique","Boot or Logon Initialization Scripts","Startup Items","T1037.005","https://attack.mitre.org/techniques/T1037/005","Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items. "
"Persistence","technique","Browser Extensions",,"T1176","https://attack.mitre.org/techniques/T1176","Adversaries may abuse Internet browser extensions to establish persistence access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access."
"Persistence","technique","Compromise Client Software Binary",,"T1554","https://attack.mitre.org/techniques/T1554","Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers."
"Persistence","technique","Create Account",,"T1136","https://attack.mitre.org/techniques/T1136","Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system."
"Persistence","subtechnique","Create Account","Local Account","T1136.001","https://attack.mitre.org/techniques/T1136/001","Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the net user /add command can be used to create a local account."
"Persistence","subtechnique","Create Account","Domain Account","T1136.002","https://attack.mitre.org/techniques/T1136/002","Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the net user /add /domain command can be used to create a domain account."
"Persistence","subtechnique","Create Account","Cloud Account","T1136.003","https://attack.mitre.org/techniques/T1136/003","Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system."
"Persistence","technique","Create or Modify System Process",,"T1543","https://attack.mitre.org/techniques/T1543","Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. On macOS, launchd processes known as Launch Daemon and Launch Agent are run to finish system initialization and load user specific parameters."
"Persistence","subtechnique","Create or Modify System Process","Launch Agent","T1543.001","https://attack.mitre.org/techniques/T1543/001","Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in /System/Library/LaunchAgents, /Library/LaunchAgents, and $HOME/Library/LaunchAgents . These launch agents have property list files which point to the executables that will be launched."
"Persistence","subtechnique","Create or Modify System Process","Systemd Service","T1543.002","https://attack.mitre.org/techniques/T1543/002","Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems."
"Persistence","subtechnique","Create or Modify System Process","Windows Service","T1543.003","https://attack.mitre.org/techniques/T1543/003","Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and Reg. "
"Persistence","subtechnique","Create or Modify System Process","Launch Daemon","T1543.004","https://attack.mitre.org/techniques/T1543/004","Adversaries may create or modify launch daemons to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in /System/Library/LaunchDaemons and /Library/LaunchDaemons . These LaunchDaemons have property list files which point to the executables that will be launched."
"Persistence","technique","Event Triggered Execution",,"T1546","https://attack.mitre.org/techniques/T1546","Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries."
"Persistence","subtechnique","Event Triggered Execution","Change Default File Association","T1546.001","https://attack.mitre.org/techniques/T1546/001","Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
"Persistence","subtechnique","Event Triggered Execution","Screensaver","T1546.002","https://attack.mitre.org/techniques/T1546/002","Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in C:\Windows\System32\, and C:\Windows\sysWOW64\ on 64-bit Windows systems, along with screensavers included with base Windows installations."
"Persistence","subtechnique","Event Triggered Execution","Windows Management Instrumentation Event Subscription","T1546.003","https://attack.mitre.org/techniques/T1546/003","Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime."
"Persistence","subtechnique","Event Triggered Execution",".bash_profile and .bashrc","T1546.004","https://attack.mitre.org/techniques/T1546/004","Adversaries may establish persistence by executing malicious content triggered by a user’s shell. ~/.bash_profile and ~/.bashrc are shell scripts that contain shell commands. These files are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly."
"Persistence","subtechnique","Event Triggered Execution","Trap","T1546.005","https://attack.mitre.org/techniques/T1546/005","Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The trap command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like ctrl+c and ctrl+d."
"Persistence","subtechnique","Event Triggered Execution","LC_LOAD_DYLIB Addition","T1546.006","https://attack.mitre.org/techniques/T1546/006","Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. There are tools available to perform these changes."
"Persistence","subtechnique","Event Triggered Execution","Netsh Helper DLL","T1546.007","https://attack.mitre.org/techniques/T1546/007","Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at HKLM\SOFTWARE\Microsoft\Netsh."
"Persistence","subtechnique","Event Triggered Execution","Accessibility Features","T1546.008","https://attack.mitre.org/techniques/T1546/008","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system."
"Persistence","subtechnique","Event Triggered Execution","AppCert DLLs","T1546.009","https://attack.mitre.org/techniques/T1546/009","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\ are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec."
"Persistence","subtechnique","Event Triggered Execution","AppInit DLLs","T1546.010","https://attack.mitre.org/techniques/T1546/010","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows or HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library."
"Persistence","subtechnique","Event Triggered Execution","Application Shimming","T1546.011","https://attack.mitre.org/techniques/T1546/011","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10."
"Persistence","subtechnique","Event Triggered Execution","Image File Execution Options Injection","T1546.012","https://attack.mitre.org/techniques/T1546/012","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IEFO) debuggers. IEFOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., C:\dbg\ntsd.exe -g notepad.exe)."
"Persistence","subtechnique","Event Triggered Execution","PowerShell Profile","T1546.013","https://attack.mitre.org/techniques/T1546/013","Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile (profile.ps1) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments."
"Persistence","subtechnique","Event Triggered Execution","Emond","T1546.014","https://attack.mitre.org/techniques/T1546/014","Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a Launch Daemon that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at /sbin/emond will load any rules from the /etc/emond.d/rules/ directory and take action once an explicitly defined event takes place."
"Persistence","subtechnique","Event Triggered Execution","Component Object Model Hijacking","T1546.015","https://attack.mitre.org/techniques/T1546/015","Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system. References to various COM objects are stored in the Registry."
"Persistence","technique","External Remote Services",,"T1133","https://attack.mitre.org/techniques/T1133","Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as Windows Remote Management can also be used externally."
"Persistence","technique","Hijack Execution Flow",,"T1574","https://attack.mitre.org/techniques/T1574","Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution."
"Persistence","subtechnique","Hijack Execution Flow","DLL Search Order Hijacking","T1574.001","https://attack.mitre.org/techniques/T1574/001","Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution."
"Persistence","subtechnique","Hijack Execution Flow","DLL Side-Loading","T1574.002","https://attack.mitre.org/techniques/T1574/002","Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program."
"Persistence","subtechnique","Hijack Execution Flow","Dylib Hijacking","T1574.004","https://attack.mitre.org/techniques/T1574/004","Adversaries may execute their own malicious payloads by hijacking ambiguous paths used to load libraries. Adversaries may plant trojan dynamic libraries, in a directory that will be searched by the operating system before the legitimate library specified by the victim program, so that their malicious library will be loaded into the victim program instead. MacOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths."
"Persistence","subtechnique","Hijack Execution Flow","Executable Installer File Permissions Weakness","T1574.005","https://attack.mitre.org/techniques/T1574/005","Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
"Persistence","subtechnique","Hijack Execution Flow","LD_PRELOAD","T1574.006","https://attack.mitre.org/techniques/T1574/006","Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries. The dynamic linker is used to load shared library dependencies needed by an executing program. The dynamic linker will typically check provided absolute paths and common directories for these dependencies, but can be overridden by shared objects specified by LD_PRELOAD to be loaded before all others."
"Persistence","subtechnique","Hijack Execution Flow","Path Interception by PATH Environment Variable","T1574.007","https://attack.mitre.org/techniques/T1574/007","Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line."
"Persistence","subtechnique","Hijack Execution Flow","Path Interception by Search Order Hijacking","T1574.008","https://attack.mitre.org/techniques/T1574/008","Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program."
"Persistence","subtechnique","Hijack Execution Flow","Path Interception by Unquoted Path","T1574.009","https://attack.mitre.org/techniques/T1574/009","Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch."
"Persistence","subtechnique","Hijack Execution Flow","Services File Permissions Weakness","T1574.010","https://attack.mitre.org/techniques/T1574/010","Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
"Persistence","subtechnique","Hijack Execution Flow","Services Registry Permissions Weakness","T1574.011","https://attack.mitre.org/techniques/T1574/011","Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start. Windows stores local service configuration information in the Registry under HKLM\SYSTEM\CurrentControlSet\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through Access Control Lists and permissions."
"Persistence","subtechnique","Hijack Execution Flow","COR_PROFILER","T1574.012","https://attack.mitre.org/techniques/T1574/012","Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR."
"Persistence","technique","Implant Container Image",,"T1525","https://attack.mitre.org/techniques/T1525","Adversaries may implant cloud container images with malicious code to establish persistence. Amazon Web Service (AWS) Amazon Machine Images (AMI), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image."
"Persistence","technique","Office Application Startup",,"T1137","https://attack.mitre.org/techniques/T1137","Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins."
"Persistence","subtechnique","Office Application Startup","Office Template Macros","T1137.001","https://attack.mitre.org/techniques/T1137/001","Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts."
"Persistence","subtechnique","Office Application Startup","Office Test","T1137.002","https://attack.mitre.org/techniques/T1137/002","Adversaries may abuse the Microsoft Office ""Office Test"" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation."
"Persistence","subtechnique","Office Application Startup","Outlook Forms","T1137.003","https://attack.mitre.org/techniques/T1137/003","Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form."
"Persistence","subtechnique","Office Application Startup","Outlook Home Page","T1137.004","https://attack.mitre.org/techniques/T1137/004","Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page."
"Persistence","subtechnique","Office Application Startup","Outlook Rules","T1137.005","https://attack.mitre.org/techniques/T1137/005","Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user."
"Persistence","subtechnique","Office Application Startup","Add-ins","T1137.006","https://attack.mitre.org/techniques/T1137/006","Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins."
"Persistence","technique","Pre-OS Boot",,"T1542","https://attack.mitre.org/techniques/T1542","Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control."
"Persistence","subtechnique","Pre-OS Boot","System Firmware","T1542.001","https://attack.mitre.org/techniques/T1542/001","Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer."
"Persistence","subtechnique","Pre-OS Boot","Component Firmware","T1542.002","https://attack.mitre.org/techniques/T1542/002","Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components/devices that may not have the same capability or level of integrity checking."
"Persistence","subtechnique","Pre-OS Boot","Bootkit","T1542.003","https://attack.mitre.org/techniques/T1542/003","Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly."
"Persistence","technique","Scheduled Task/Job",,"T1053","https://attack.mitre.org/techniques/T1053","Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system."
"Persistence","subtechnique","Scheduled Task/Job","At (Linux)","T1053.001","https://attack.mitre.org/techniques/T1053/001","Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks."
"Persistence","subtechnique","Scheduled Task/Job","At (Windows)","T1053.002","https://attack.mitre.org/techniques/T1053/002","Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group."
"Persistence","subtechnique","Scheduled Task/Job","Cron","T1053.003","https://attack.mitre.org/techniques/T1053/003","Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code. The cron utility is a time-based job scheduler for Unix-like operating systems. The crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths."
"Persistence","subtechnique","Scheduled Task/Job","Launchd","T1053.004","https://attack.mitre.org/techniques/T1053/004","Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code. The launchd daemon, native to macOS, is responsible for loading and maintaining services within the operating system. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in /System/Library/LaunchDaemons and /Library/LaunchDaemons . These LaunchDaemons have property list files which point to the executables that will be launched."
"Persistence","subtechnique","Scheduled Task/Job","Scheduled Task","T1053.005","https://attack.mitre.org/techniques/T1053/005","Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task."
"Persistence","technique","Server Software Component",,"T1505","https://attack.mitre.org/techniques/T1505","Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications."
"Persistence","subtechnique","Server Software Component","SQL Stored Procedures","T1505.001","https://attack.mitre.org/techniques/T1505/001","Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted)."
"Persistence","subtechnique","Server Software Component","Transport Agent","T1505.002","https://attack.mitre.org/techniques/T1505/002","Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks."
"Persistence","subtechnique","Server Software Component","Web Shell","T1505.003","https://attack.mitre.org/techniques/T1505/003","Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server."
"Persistence","technique","Traffic Signaling",,"T1205","https://attack.mitre.org/techniques/T1205","Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software."
"Persistence","subtechnique","Traffic Signaling","Port Knocking","T1205.001","https://attack.mitre.org/techniques/T1205/001","Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software."
"Persistence","technique","Valid Accounts",,"T1078","https://attack.mitre.org/techniques/T1078","Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence."
"Persistence","subtechnique","Valid Accounts","Default Accounts","T1078.001","https://attack.mitre.org/techniques/T1078/001","Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices."
"Persistence","subtechnique","Valid Accounts","Domain Accounts","T1078.002","https://attack.mitre.org/techniques/T1078/002","Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services."
"Persistence","subtechnique","Valid Accounts","Local Accounts","T1078.003","https://attack.mitre.org/techniques/T1078/003","Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
"Persistence","subtechnique","Valid Accounts","Cloud Accounts","T1078.004","https://attack.mitre.org/techniques/T1078/004","Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory."
"Privilege Escalation","tactic",,,"TA0004","https://attack.mitre.org/tactics/TA0004/","The adversary is trying to gain higher-level permissions. Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: • SYSTEM/root level • local administrator • user account with admin-like access • user accounts with access to specific system or perform specific function These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context."
"Privilege Escalation","technique","Abuse Elevation Control Mechanism",,"T1548","https://attack.mitre.org/techniques/T1548","Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system."
"Privilege Escalation","subtechnique","Abuse Elevation Control Mechanism","Setuid and Setgid","T1548.001","https://attack.mitre.org/techniques/T1548/001","An adversary may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application, the application will run with the privileges of the owning user or group respectively. . Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges."
"Privilege Escalation","subtechnique","Abuse Elevation Control Mechanism","Bypass User Access Control","T1548.002","https://attack.mitre.org/techniques/T1548/002","Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action."
"Privilege Escalation","subtechnique","Abuse Elevation Control Mechanism","Sudo and Sudo Caching","T1548.003","https://attack.mitre.org/techniques/T1548/003","Adversaries may perform sudo caching and/or use the suoders file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges."
"Privilege Escalation","subtechnique","Abuse Elevation Control Mechanism","Elevated Execution with Prompt","T1548.004","https://attack.mitre.org/techniques/T1548/004","Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified."
"Privilege Escalation","technique","Access Token Manipulation",,"T1134","https://attack.mitre.org/techniques/T1134","Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token."
"Privilege Escalation","subtechnique","Access Token Manipulation","Token Impersonation/Theft","T1134.001","https://attack.mitre.org/techniques/T1134/001","Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread."
"Privilege Escalation","subtechnique","Access Token Manipulation","Create Process with Token","T1134.002","https://attack.mitre.org/techniques/T1134/002","Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with DuplicateToken(Ex) and use it with CreateProcessWithTokenW to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user."
"Privilege Escalation","subtechnique","Access Token Manipulation","Make and Impersonate Token","T1134.003","https://attack.mitre.org/techniques/T1134/003","Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread."
"Privilege Escalation","subtechnique","Access Token Manipulation","Parent PID Spoofing","T1134.004","https://attack.mitre.org/techniques/T1134/004","Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context."
"Privilege Escalation","subtechnique","Access Token Manipulation","SID-History Injection","T1134.005","https://attack.mitre.org/techniques/T1134/005","Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens)."
"Privilege Escalation","technique","Boot or Logon Autostart Execution",,"T1547","https://attack.mitre.org/techniques/T1547","Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.  These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Registry Run Keys / Startup Folder","T1547.001","https://attack.mitre.org/techniques/T1547/001","Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Authentication Package","T1547.002","https://attack.mitre.org/techniques/T1547/002","Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Time Providers","T1547.003","https://attack.mitre.org/techniques/T1547/003","Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Winlogon Helper DLL","T1547.004","https://attack.mitre.org/techniques/T1547/004","Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[\Wow6432Node\]\Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Security Support Provider","T1547.005","https://attack.mitre.org/techniques/T1547/005","Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Kernel Modules and Extensions","T1547.006","https://attack.mitre.org/techniques/T1547/006","Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Re-opened Applications","T1547.007","https://attack.mitre.org/techniques/T1547/007","Adversaries may modify plist files to automatically run an application when a user logs in. Starting in Mac OS X 10.7 (Lion), users can specify certain applications to be re-opened when a user logs into their machine after reboot. While this is usually done via a Graphical User Interface (GUI) on an app-by-app basis, there are property list files (plist) that contain this information as well located at ~/Library/Preferences/com.apple.loginwindow.plist and ~/Library/Preferences/ByHost/com.apple.loginwindow.* .plist."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","LSASS Driver","T1547.008","https://attack.mitre.org/techniques/T1547/008","Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Shortcut Modification","T1547.009","https://attack.mitre.org/techniques/T1547/009","Adversaries may create or edit shortcuts to run a program during system boot or user login. Shortcuts or symbolic links are ways of referencing other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Port Monitors","T1547.010","https://attack.mitre.org/techniques/T1547/010","Adversaries may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup. This DLL can be located in C:\Windows\System32 and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors."
"Privilege Escalation","subtechnique","Boot or Logon Autostart Execution","Plist Modification","T1547.011","https://attack.mitre.org/techniques/T1547/011","Adversaries may modify plist files to run a program during system boot or user login. Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as /Library/Preferences (which execute with elevated privileges) and ~/Library/Preferences (which execute with a user's privileges)."
"Privilege Escalation","technique","Boot or Logon Initialization Scripts",,"T1037","https://attack.mitre.org/techniques/T1037","Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely."
"Privilege Escalation","subtechnique","Boot or Logon Initialization Scripts","Logon Script (Windows)","T1037.001","https://attack.mitre.org/techniques/T1037/001","Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to the HKCU\Environment\UserInitMprLogonScript Registry key."
"Privilege Escalation","subtechnique","Boot or Logon Initialization Scripts","Logon Script (Mac)","T1037.002","https://attack.mitre.org/techniques/T1037/002","Adversaries may use macOS logon scripts automatically executed at logon initialization to establish persistence. macOS allows logon scripts (known as login hooks) to be executed whenever a specific user logs into a system. A login hook tells Mac OS X to execute a certain script when a user logs in, but unlike Startup Items, a login hook executes as the elevated root user."
"Privilege Escalation","subtechnique","Boot or Logon Initialization Scripts","Network Logon Script","T1037.003","https://attack.mitre.org/techniques/T1037/003","Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects. These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems."
"Privilege Escalation","subtechnique","Boot or Logon Initialization Scripts","Rc.common","T1037.004","https://attack.mitre.org/techniques/T1037/004","Adversaries may use rc.common automatically executed at boot initialization to establish persistence. During the boot process, macOS executes source /etc/rc.common, which is a shell script containing various utility functions. This file also defines routines for processing command-line arguments and for gathering system settings and is thus recommended to include in the start of Startup Item Scripts . In macOS and OS X, this is now a deprecated mechanism in favor of Launch Agent and Launch Daemon but is currently still used."
"Privilege Escalation","subtechnique","Boot or Logon Initialization Scripts","Startup Items","T1037.005","https://attack.mitre.org/techniques/T1037/005","Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items."
"Privilege Escalation","technique","Create or Modify System Process",,"T1543","https://attack.mitre.org/techniques/T1543","Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. On macOS, launchd processes known as Launch Daemon and Launch Agent are run to finish system initialization and load user specific parameters."
"Privilege Escalation","subtechnique","Create or Modify System Process","Launch Agent","T1543.001","https://attack.mitre.org/techniques/T1543/001","Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (plist) files found in /System/Library/LaunchAgents, /Library/LaunchAgents, and $HOME/Library/LaunchAgents . These launch agents have property list files which point to the executables that will be launched."
"Privilege Escalation","subtechnique","Create or Modify System Process","Systemd Service","T1543.002","https://attack.mitre.org/techniques/T1543/002","Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems."
"Privilege Escalation","subtechnique","Create or Modify System Process","Windows Service","T1543.003","https://attack.mitre.org/techniques/T1543/003","Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry. Service configurations can be modified using utilities such as sc.exe and Reg. "
"Privilege Escalation","subtechnique","Create or Modify System Process","Launch Daemon","T1543.004","https://attack.mitre.org/techniques/T1543/004","Adversaries may create or modify launch daemons to repeatedly execute malicious payloads as part of persistence. Per Apple’s developer documentation, when macOS and OS X boot up, launchd is run to finish system initialization. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in /System/Library/LaunchDaemons and /Library/LaunchDaemons . These LaunchDaemons have property list files which point to the executables that will be launched."
"Privilege Escalation","technique","Event Triggered Execution",,"T1546","https://attack.mitre.org/techniques/T1546","Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries."
"Privilege Escalation","subtechnique","Event Triggered Execution","Change Default File Association","T1546.001","https://attack.mitre.org/techniques/T1546/001","Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened."
"Privilege Escalation","subtechnique","Event Triggered Execution","Screensaver","T1546.002","https://attack.mitre.org/techniques/T1546/002","Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in C:\Windows\System32\, and C:\Windows\sysWOW64\ on 64-bit Windows systems, along with screensavers included with base Windows installations."
"Privilege Escalation","subtechnique","Event Triggered Execution","Windows Management Instrumentation Event Subscription","T1546.003","https://attack.mitre.org/techniques/T1546/003","Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime."
"Privilege Escalation","subtechnique","Event Triggered Execution",".bash_profile and .bashrc","T1546.004","https://attack.mitre.org/techniques/T1546/004","Adversaries may establish persistence by executing malicious content triggered by a user’s shell. ~/.bash_profile and ~/.bashrc are shell scripts that contain shell commands. These files are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly."
"Privilege Escalation","subtechnique","Event Triggered Execution","Trap","T1546.005","https://attack.mitre.org/techniques/T1546/005","Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The trap command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like ctrl+c and ctrl+d."
"Privilege Escalation","subtechnique","Event Triggered Execution","LC_LOAD_DYLIB Addition","T1546.006","https://attack.mitre.org/techniques/T1546/006","Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. There are tools available to perform these changes."
"Privilege Escalation","subtechnique","Event Triggered Execution","Netsh Helper DLL","T1546.007","https://attack.mitre.org/techniques/T1546/007","Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at HKLM\SOFTWARE\Microsoft\Netsh."
"Privilege Escalation","subtechnique","Event Triggered Execution","Accessibility Features","T1546.008","https://attack.mitre.org/techniques/T1546/008","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system."
"Privilege Escalation","subtechnique","Event Triggered Execution","AppCert DLLs","T1546.009","https://attack.mitre.org/techniques/T1546/009","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\ are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec."
"Privilege Escalation","subtechnique","Event Triggered Execution","AppInit DLLs","T1546.010","https://attack.mitre.org/techniques/T1546/010","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows or HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library."
"Privilege Escalation","subtechnique","Event Triggered Execution","Application Shimming","T1546.011","https://attack.mitre.org/techniques/T1546/011","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10."
"Privilege Escalation","subtechnique","Event Triggered Execution","Image File Execution Options Injection","T1546.012","https://attack.mitre.org/techniques/T1546/012","Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IEFO) debuggers. IEFOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., C:\dbg\ntsd.exe -g notepad.exe)."
"Privilege Escalation","subtechnique","Event Triggered Execution","PowerShell Profile","T1546.013","https://attack.mitre.org/techniques/T1546/013","Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile (profile.ps1) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments."
"Privilege Escalation","subtechnique","Event Triggered Execution","Emond","T1546.014","https://attack.mitre.org/techniques/T1546/014","Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a Launch Daemon that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at /sbin/emond will load any rules from the /etc/emond.d/rules/ directory and take action once an explicitly defined event takes place."
"Privilege Escalation","subtechnique","Event Triggered Execution","Component Object Model Hijacking","T1546.015","https://attack.mitre.org/techniques/T1546/015","Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system. References to various COM objects are stored in the Registry."
"Privilege Escalation","technique","Exploitation for Privilege Escalation",,"T1068","https://attack.mitre.org/techniques/T1068","Adversaries may exploit software vulnerabilities in an attempt to collect elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions."
"Privilege Escalation","technique","Group Policy Modification",,"T1484","https://attack.mitre.org/techniques/T1484","Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path \<DOMAIN>\SYSVOL\<DOMAIN>\Policies\. "
"Privilege Escalation","technique","Hijack Execution Flow",,"T1574","https://attack.mitre.org/techniques/T1574","Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution."
"Privilege Escalation","subtechnique","Hijack Execution Flow","DLL Search Order Hijacking","T1574.001","https://attack.mitre.org/techniques/T1574/001","Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution."
"Privilege Escalation","subtechnique","Hijack Execution Flow","DLL Side-Loading","T1574.002","https://attack.mitre.org/techniques/T1574/002","Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Dylib Hijacking","T1574.004","https://attack.mitre.org/techniques/T1574/004","Adversaries may execute their own malicious payloads by hijacking ambiguous paths used to load libraries. Adversaries may plant trojan dynamic libraries, in a directory that will be searched by the operating system before the legitimate library specified by the victim program, so that their malicious library will be loaded into the victim program instead. MacOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Executable Installer File Permissions Weakness","T1574.005","https://attack.mitre.org/techniques/T1574/005","Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
"Privilege Escalation","subtechnique","Hijack Execution Flow","LD_PRELOAD","T1574.006","https://attack.mitre.org/techniques/T1574/006","Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries. The dynamic linker is used to load shared library dependencies needed by an executing program. The dynamic linker will typically check provided absolute paths and common directories for these dependencies, but can be overridden by shared objects specified by LD_PRELOAD to be loaded before all others."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Path Interception by PATH Environment Variable","T1574.007","https://attack.mitre.org/techniques/T1574/007","Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Path Interception by Search Order Hijacking","T1574.008","https://attack.mitre.org/techniques/T1574/008","Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Path Interception by Unquoted Path","T1574.009","https://attack.mitre.org/techniques/T1574/009","Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Services File Permissions Weakness","T1574.010","https://attack.mitre.org/techniques/T1574/010","Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
"Privilege Escalation","subtechnique","Hijack Execution Flow","Services Registry Permissions Weakness","T1574.011","https://attack.mitre.org/techniques/T1574/011","Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start. Windows stores local service configuration information in the Registry under HKLM\SYSTEM\CurrentControlSet\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through Access Control Lists and permissions."
"Privilege Escalation","subtechnique","Hijack Execution Flow","COR_PROFILER","T1574.012","https://attack.mitre.org/techniques/T1574/012","Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR."
"Privilege Escalation","technique","Process Injection",,"T1055","https://attack.mitre.org/techniques/T1055","Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. "
"Privilege Escalation","subtechnique","Process Injection","Dynamic-link Library Injection","T1055.001","https://attack.mitre.org/techniques/T1055/001","Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Portable Executable Injection","T1055.002","https://attack.mitre.org/techniques/T1055/002","Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Thread Execution Hijacking","T1055.003","https://attack.mitre.org/techniques/T1055/003","Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Asynchronous Procedure Call","T1055.004","https://attack.mitre.org/techniques/T1055/004","Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Thread Local Storage","T1055.005","https://attack.mitre.org/techniques/T1055/005","Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Ptrace System Calls","T1055.008","https://attack.mitre.org/techniques/T1055/008","Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Proc Memory","T1055.009","https://attack.mitre.org/techniques/T1055/009","Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Extra Window Memory Injection","T1055.011","https://attack.mitre.org/techniques/T1055/011","Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Process Hollowing","T1055.012","https://attack.mitre.org/techniques/T1055/012","Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","Process Doppelgänging","T1055.013","https://attack.mitre.org/techniques/T1055/013","Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","subtechnique","Process Injection","VDSO Hijacking","T1055.014","https://attack.mitre.org/techniques/T1055/014","Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process."
"Privilege Escalation","technique","Scheduled Task/Job",,"T1053","https://attack.mitre.org/techniques/T1053","Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically requires being a member of an admin or otherwise privileged group on the remote system."
"Privilege Escalation","subtechnique","Scheduled Task/Job","At (Linux)","T1053.001","https://attack.mitre.org/techniques/T1053/001","Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code. The at command within Linux operating systems enables administrators to schedule tasks."
"Privilege Escalation","subtechnique","Scheduled Task/Job","At (Windows)","T1053.002","https://attack.mitre.org/techniques/T1053/002","Adversaries may abuse the at.exe utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows for scheduling tasks at a specified time and date. Using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group."
"Privilege Escalation","subtechnique","Scheduled Task/Job","Cron","T1053.003","https://attack.mitre.org/techniques/T1053/003","Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code. The cron utility is a time-based job scheduler for Unix-like operating systems. The crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths."
"Privilege Escalation","subtechnique","Scheduled Task/Job","Launchd","T1053.004","https://attack.mitre.org/techniques/T1053/004","Adversaries may abuse the Launchd daemon to perform task scheduling for initial or recurring execution of malicious code. The launchd daemon, native to macOS, is responsible for loading and maintaining services within the operating system. This process loads the parameters for each launch-on-demand system-level daemon from the property list (plist) files found in /System/Library/LaunchDaemons and /Library/LaunchDaemons . These LaunchDaemons have property list files which point to the executables that will be launched."
"Privilege Escalation","subtechnique","Scheduled Task/Job","Scheduled Task","T1053.005","https://attack.mitre.org/techniques/T1053/005","Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task."
"Privilege Escalation","technique","Valid Accounts",,"T1078","https://attack.mitre.org/techniques/T1078","Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence."
"Privilege Escalation","subtechnique","Valid Accounts","Default Accounts","T1078.001","https://attack.mitre.org/techniques/T1078/001","Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices."
"Privilege Escalation","subtechnique","Valid Accounts","Domain Accounts","T1078.002","https://attack.mitre.org/techniques/T1078/002","Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services."
"Privilege Escalation","subtechnique","Valid Accounts","Local Accounts","T1078.003","https://attack.mitre.org/techniques/T1078/003","Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
"Privilege Escalation","subtechnique","Valid Accounts","Cloud Accounts","T1078.004","https://attack.mitre.org/techniques/T1078/004","Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory."
"Defense Evasion","tactic",,,"TA0005","https://attack.mitre.org/tactics/TA0005/","The adversary is trying to avoid being detected. Defense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses."
"Defense Evasion","technique","Abuse Elevation Control Mechanism",,"T1548","https://attack.mitre.org/techniques/T1548","Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system."
"Defense Evasion","subtechnique","Abuse Elevation Control Mechanism","Setuid and Setgid","T1548.001","https://attack.mitre.org/techniques/T1548/001","An adversary may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application, the application will run with the privileges of the owning user or group respectively. . Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them doesn’t need the elevated privileges."
"Defense Evasion","subtechnique","Abuse Elevation Control Mechanism","Bypass User Access Control","T1548.002","https://attack.mitre.org/techniques/T1548/002","Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action."
"Defense Evasion","subtechnique","Abuse Elevation Control Mechanism","Sudo and Sudo Caching","T1548.003","https://attack.mitre.org/techniques/T1548/003","Adversaries may perform sudo caching and/or use the suoders file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges."
"Defense Evasion","subtechnique","Abuse Elevation Control Mechanism","Elevated Execution with Prompt","T1548.004","https://attack.mitre.org/techniques/T1548/004","Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified."
"Defense Evasion","technique","Access Token Manipulation",,"T1134","https://attack.mitre.org/techniques/T1134","Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token."
"Defense Evasion","subtechnique","Access Token Manipulation","Token Impersonation/Theft","T1134.001","https://attack.mitre.org/techniques/T1134/001","Adversaries may duplicate then impersonate another user's token to escalate privileges and bypass access controls. An adversary can create a new access token that duplicates an existing token using DuplicateToken(Ex). The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread."
"Defense Evasion","subtechnique","Access Token Manipulation","Create Process with Token","T1134.002","https://attack.mitre.org/techniques/T1134/002","Adversaries may create a new process with a duplicated token to escalate privileges and bypass access controls. An adversary can duplicate a desired access token with DuplicateToken(Ex) and use it with CreateProcessWithTokenW to create a new process running under the security context of the impersonated user. This is useful for creating a new process under the security context of a different user."
"Defense Evasion","subtechnique","Access Token Manipulation","Make and Impersonate Token","T1134.003","https://attack.mitre.org/techniques/T1134/003","Adversaries may make and impersonate tokens to escalate privileges and bypass access controls. If an adversary has a username and password but the user is not logged onto the system, the adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread."
"Defense Evasion","subtechnique","Access Token Manipulation","Parent PID Spoofing","T1134.004","https://attack.mitre.org/techniques/T1134/004","Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context."
"Defense Evasion","subtechnique","Access Token Manipulation","SID-History Injection","T1134.005","https://attack.mitre.org/techniques/T1134/005","Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens)."
"Defense Evasion","technique","BITS Jobs",,"T1197","https://attack.mitre.org/techniques/T1197","Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through Component Object Model (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations."
"Defense Evasion","technique","Deobfuscate/Decode Files or Information",,"T1140","https://attack.mitre.org/techniques/T1140","Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system."
"Defense Evasion","technique","Direct Volume Access",,"T1006","https://attack.mitre.org/techniques/T1006","Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools."
"Defense Evasion","technique","Execution Guardrails",,"T1480","https://attack.mitre.org/techniques/T1480","Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses."
"Defense Evasion","subtechnique","Execution Guardrails","Environmental Keying","T1480.001","https://attack.mitre.org/techniques/T1480/001","Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment."
"Defense Evasion","technique","Exploitation for Defense Evasion",,"T1211","https://attack.mitre.org/techniques/T1211","Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them."
"Defense Evasion","technique","File and Directory Permissions Modification",,"T1222","https://attack.mitre.org/techniques/T1222","Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)."
"Defense Evasion","subtechnique","File and Directory Permissions Modification","Windows File and Directory Permissions Modification","T1222.001","https://attack.mitre.org/techniques/T1222/001","Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)."
"Defense Evasion","subtechnique","File and Directory Permissions Modification","Linux and Mac File and Directory Permissions Modification","T1222.002","https://attack.mitre.org/techniques/T1222/002","Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.)."
"Defense Evasion","technique","Group Policy Modification",,"T1484","https://attack.mitre.org/techniques/T1484","Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predicable network path \<DOMAIN>\SYSVOL\<DOMAIN>\Policies\. "
"Defense Evasion","technique","Hide Artifacts",,"T1564","https://attack.mitre.org/techniques/T1564","Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection."
"Defense Evasion","subtechnique","Hide Artifacts","Hidden Files and Directories","T1564.001","https://attack.mitre.org/techniques/T1564/001","Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir /a for Windows and ls –a for Linux and macOS)."
"Defense Evasion","subtechnique","Hide Artifacts","Hidden Users","T1564.002","https://attack.mitre.org/techniques/T1564/002","Adversaries may use hidden users to mask the presence of user accounts they create. Every user account in macOS has a userID associated with it. When creating a user, you can specify the userID for that account."
"Defense Evasion","subtechnique","Hide Artifacts","Hidden Window","T1564.003","https://attack.mitre.org/techniques/T1564/003","Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks."
"Defense Evasion","subtechnique","Hide Artifacts","NTFS File Attributes","T1564.004","https://attack.mitre.org/techniques/T1564/004","Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. Within MFT entries are file attributes, such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files)."
"Defense Evasion","subtechnique","Hide Artifacts","Hidden File System","T1564.005","https://attack.mitre.org/techniques/T1564/005","Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS."
"Defense Evasion","subtechnique","Hide Artifacts","Run Virtual Instance","T1564.006","https://attack.mitre.org/techniques/T1564/006","Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values."
"Defense Evasion","technique","Hijack Execution Flow",,"T1574","https://attack.mitre.org/techniques/T1574","Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution."
"Defense Evasion","subtechnique","Hijack Execution Flow","DLL Search Order Hijacking","T1574.001","https://attack.mitre.org/techniques/T1574/001","Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution."
"Defense Evasion","subtechnique","Hijack Execution Flow","DLL Side-Loading","T1574.002","https://attack.mitre.org/techniques/T1574/002","Adversaries may execute their own malicious payloads by hijacking the library manifest used to load DLLs. Adversaries may take advantage of vague references in the library manifest of a program by replacing a legitimate library with a malicious one, causing the operating system to load their malicious library when it is called for by the victim program."
"Defense Evasion","subtechnique","Hijack Execution Flow","Dylib Hijacking","T1574.004","https://attack.mitre.org/techniques/T1574/004","Adversaries may execute their own malicious payloads by hijacking ambiguous paths used to load libraries. Adversaries may plant trojan dynamic libraries, in a directory that will be searched by the operating system before the legitimate library specified by the victim program, so that their malicious library will be loaded into the victim program instead. MacOS and OS X use a common method to look for required dynamic libraries (dylib) to load into a program based on search paths."
"Defense Evasion","subtechnique","Hijack Execution Flow","Executable Installer File Permissions Weakness","T1574.005","https://attack.mitre.org/techniques/T1574/005","Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
"Defense Evasion","subtechnique","Hijack Execution Flow","LD_PRELOAD","T1574.006","https://attack.mitre.org/techniques/T1574/006","Adversaries may execute their own malicious payloads by hijacking the dynamic linker used to load libraries. The dynamic linker is used to load shared library dependencies needed by an executing program. The dynamic linker will typically check provided absolute paths and common directories for these dependencies, but can be overridden by shared objects specified by LD_PRELOAD to be loaded before all others."
"Defense Evasion","subtechnique","Hijack Execution Flow","Path Interception by PATH Environment Variable","T1574.007","https://attack.mitre.org/techniques/T1574/007","Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line."
"Defense Evasion","subtechnique","Hijack Execution Flow","Path Interception by Search Order Hijacking","T1574.008","https://attack.mitre.org/techniques/T1574/008","Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program."
"Defense Evasion","subtechnique","Hijack Execution Flow","Path Interception by Unquoted Path","T1574.009","https://attack.mitre.org/techniques/T1574/009","Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch."
"Defense Evasion","subtechnique","Hijack Execution Flow","Services File Permissions Weakness","T1574.010","https://attack.mitre.org/techniques/T1574/010","Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM."
"Defense Evasion","subtechnique","Hijack Execution Flow","Services Registry Permissions Weakness","T1574.011","https://attack.mitre.org/techniques/T1574/011","Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start. Windows stores local service configuration information in the Registry under HKLM\SYSTEM\CurrentControlSet\Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through Access Control Lists and permissions."
"Defense Evasion","subtechnique","Hijack Execution Flow","COR_PROFILER","T1574.012","https://attack.mitre.org/techniques/T1574/012","Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR."
"Defense Evasion","technique","Impair Defenses",,"T1562","https://attack.mitre.org/techniques/T1562","Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators."
"Defense Evasion","subtechnique","Impair Defenses","Disable or Modify Tools","T1562.001","https://attack.mitre.org/techniques/T1562/001","Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security tools scanning or reporting information."
"Defense Evasion","subtechnique","Impair Defenses","Disable Windows Event Logging","T1562.002","https://attack.mitre.org/techniques/T1562/002","Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections."
"Defense Evasion","subtechnique","Impair Defenses","HISTCONTROL","T1562.003","https://attack.mitre.org/techniques/T1562/003","Adversaries may configure HISTCONTROL to not log all command history. The HISTCONTROL environment variable keeps track of what should be saved by the history command and eventually into the ~/.bash_history file when a user logs out. HISTCONTROL does not exist by default on macOS, but can be set by the user and will be respected."
"Defense Evasion","subtechnique","Impair Defenses","Disable or Modify System Firewall","T1562.004","https://attack.mitre.org/techniques/T1562/004","Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel."
"Defense Evasion","subtechnique","Impair Defenses","Indicator Blocking","T1562.006","https://attack.mitre.org/techniques/T1562/006","An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation."
"Defense Evasion","subtechnique","Impair Defenses","Disable or Modify Cloud Firewall","T1562.007","https://attack.mitre.org/techniques/T1562/007","Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in Disable or Modify System Firewall."
"Defense Evasion","technique","Indicator Removal on Host",,"T1070","https://attack.mitre.org/techniques/T1070","Adversaries may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Locations and format of logs are platform or product-specific, however standard operating system logs are captured as Windows events or Linux/macOS files such as Bash History and /var/log/*."
"Defense Evasion","subtechnique","Indicator Removal on Host","Clear Windows Event Logs","T1070.001","https://attack.mitre.org/techniques/T1070/001","Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit."
"Defense Evasion","subtechnique","Indicator Removal on Host","Clear Linux or Mac System Logs","T1070.002","https://attack.mitre.org/techniques/T1070/002","Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the /var/log/ directory. Subfolders in this directory categorize logs by their related functions, such as:"
"Defense Evasion","subtechnique","Indicator Removal on Host","Clear Command History","T1070.003","https://attack.mitre.org/techniques/T1070/003","In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. macOS and Linux both keep track of the commands users type in their terminal so that users can retrace what they've done."
"Defense Evasion","subtechnique","Indicator Removal on Host","File Deletion","T1070.004","https://attack.mitre.org/techniques/T1070/004","Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint."
"Defense Evasion","subtechnique","Indicator Removal on Host","Network Share Connection Removal","T1070.005","https://attack.mitre.org/techniques/T1070/005","Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the net use \system\share /delete command."
"Defense Evasion","subtechnique","Indicator Removal on Host","Timestomp","T1070.006","https://attack.mitre.org/techniques/T1070/006","Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools."
"Defense Evasion","technique","Indirect Command Execution",,"T1202","https://attack.mitre.org/techniques/T1202","Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking cmd. For example, Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a Command and Scripting Interpreter, Run window, or via scripts. "
"Defense Evasion","technique","Masquerading",,"T1036","https://attack.mitre.org/techniques/T1036","Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names."
"Defense Evasion","subtechnique","Masquerading","Invalid Code Signature","T1036.001","https://attack.mitre.org/techniques/T1036/001","Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files."
"Defense Evasion","subtechnique","Masquerading","Right-to-Left Override","T1036.002","https://attack.mitre.org/techniques/T1036/002","Adversaries may use the right-to-left override (RTLO or RLO) character (U+202E) as a means of tricking a user into executing what they think is a benign file type but is actually executable code. RTLO is a non-printing character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named March 25 \u202Excod.scr will display as March 25 rcs.docx. A JavaScript file named photo_high_re\u202Egnp.js will be displayed as photo_high_resj.png."
"Defense Evasion","subtechnique","Masquerading","Rename System Utilities","T1036.003","https://attack.mitre.org/techniques/T1036/003","Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename rundll32.exe). An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths."
"Defense Evasion","subtechnique","Masquerading","Masquerade Task or Service","T1036.004","https://attack.mitre.org/techniques/T1036/004","Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones."
"Defense Evasion","subtechnique","Masquerading","Match Legitimate Name or Location","T1036.005","https://attack.mitre.org/techniques/T1036/005","Adversaries may match or approximate the name or location of legitimate files when naming/placing their files. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). Alternatively, the filename given may be a close approximation of legitimate programs or something innocuous."
"Defense Evasion","subtechnique","Masquerading","Space after Filename","T1036.006","https://attack.mitre.org/techniques/T1036/006","Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system."
"Defense Evasion","technique","Modify Authentication Process",,"T1556","https://attack.mitre.org/techniques/T1556","Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows or pluggable authentication modules (PAM) on Unix-based systems, responsible for gathering, storing, and validating credentials. "
"Defense Evasion","subtechnique","Modify Authentication Process","Domain Controller Authentication","T1556.001","https://attack.mitre.org/techniques/T1556/001","Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts. "
"Defense Evasion","subtechnique","Modify Authentication Process","Password Filter DLL","T1556.002","https://attack.mitre.org/techniques/T1556/002","Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. "
"Defense Evasion","subtechnique","Modify Authentication Process","Pluggable Authentication Modules","T1556.003","https://attack.mitre.org/techniques/T1556/003","Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in /etc/passwd and /etc/shadow."
"Defense Evasion","technique","Modify Cloud Compute Infrastructure",,"T1578","https://attack.mitre.org/techniques/T1578","An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots."
"Defense Evasion","subtechnique","Modify Cloud Compute Infrastructure","Create Snapshot","T1578.001","https://attack.mitre.org/techniques/T1578/001","An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in Revert Cloud Instance where an adversary may revert to a snapshot to evade detection and remove evidence of their presence."
"Defense Evasion","subtechnique","Modify Cloud Compute Infrastructure","Create Cloud Instance","T1578.002","https://attack.mitre.org/techniques/T1578/002","An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may Create Snapshot of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect Data from Local System or for Remote Data Staging."
"Defense Evasion","subtechnique","Modify Cloud Compute Infrastructure","Delete Cloud Instance","T1578.003","https://attack.mitre.org/techniques/T1578/003","An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable."
"Defense Evasion","subtechnique","Modify Cloud Compute Infrastructure","Revert Cloud Instance","T1578.004","https://attack.mitre.org/techniques/T1578/004","An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs."
"Defense Evasion","technique","Modify Registry",,"T1112","https://attack.mitre.org/techniques/T1112","Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution."
"Defense Evasion","technique","Obfuscated Files or Information",,"T1027","https://attack.mitre.org/techniques/T1027",
"Defense Evasion","subtechnique","Obfuscated Files or Information","Binary Padding","T1027.001","https://attack.mitre.org/techniques/T1027/001","Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations."
"Defense Evasion","subtechnique","Obfuscated Files or Information","Software Packing","T1027.002","https://attack.mitre.org/techniques/T1027/002","Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code."
"Defense Evasion","subtechnique","Obfuscated Files or Information","Steganography","T1027.003","https://attack.mitre.org/techniques/T1027/003","Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files."
"Defense Evasion","subtechnique","Obfuscated Files or Information","Compile After Delivery","T1027.004","https://attack.mitre.org/techniques/T1027/004","Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW."
"Defense Evasion","subtechnique","Obfuscated Files or Information","Indicator Removal from Tools","T1027.005","https://attack.mitre.org/techniques/T1027/005","Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems."
"Defense Evasion","technique","Pre-OS Boot",,"T1542","https://attack.mitre.org/techniques/T1542","Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control."
"Defense Evasion","subtechnique","Pre-OS Boot","System Firmware","T1542.001","https://attack.mitre.org/techniques/T1542/001","Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer."
"Defense Evasion","subtechnique","Pre-OS Boot","Component Firmware","T1542.002","https://attack.mitre.org/techniques/T1542/002","Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components/devices that may not have the same capability or level of integrity checking."
"Defense Evasion","subtechnique","Pre-OS Boot","Bootkit","T1542.003","https://attack.mitre.org/techniques/T1542/003","Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly."
"Defense Evasion","technique","Process Injection",,"T1055","https://attack.mitre.org/techniques/T1055","Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. "
"Defense Evasion","subtechnique","Process Injection","Dynamic-link Library Injection","T1055.001","https://attack.mitre.org/techniques/T1055/001","Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Portable Executable Injection","T1055.002","https://attack.mitre.org/techniques/T1055/002","Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Thread Execution Hijacking","T1055.003","https://attack.mitre.org/techniques/T1055/003","Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Asynchronous Procedure Call","T1055.004","https://attack.mitre.org/techniques/T1055/004","Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Thread Local Storage","T1055.005","https://attack.mitre.org/techniques/T1055/005","Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Ptrace System Calls","T1055.008","https://attack.mitre.org/techniques/T1055/008","Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Proc Memory","T1055.009","https://attack.mitre.org/techniques/T1055/009","Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Extra Window Memory Injection","T1055.011","https://attack.mitre.org/techniques/T1055/011","Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Process Hollowing","T1055.012","https://attack.mitre.org/techniques/T1055/012","Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","Process Doppelgänging","T1055.013","https://attack.mitre.org/techniques/T1055/013","Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","subtechnique","Process Injection","VDSO Hijacking","T1055.014","https://attack.mitre.org/techniques/T1055/014","Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process."
"Defense Evasion","technique","Rogue Domain Controller",,"T1207","https://attack.mitre.org/techniques/T1207","Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys."
"Defense Evasion","technique","Rootkit",,"T1014","https://attack.mitre.org/techniques/T1014","Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. "
"Defense Evasion","technique","Signed Binary Proxy Execution",,"T1218","https://attack.mitre.org/techniques/T1218","Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed binaries. Binaries signed with trusted digital certificates can execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Compiled HTML File","T1218.001","https://attack.mitre.org/techniques/T1218/001","Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. CHM content is displayed using underlying components of the Internet Explorer browser loaded by the HTML Help executable program (hh.exe)."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Control Panel","T1218.002","https://attack.mitre.org/techniques/T1218/002","Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings. Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a CPlApplet function. Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","CMSTP","T1218.003","https://attack.mitre.org/techniques/T1218/003","Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","InstallUtil","T1218.004","https://attack.mitre.org/techniques/T1218/004","Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. InstallUtil is digitally signed by Microsoft and located in the .NET directories on a Windows system: C:\Windows\Microsoft.NET\Framework\v\InstallUtil.exe and C:\Windows\Microsoft.NET\Framework64\v\InstallUtil.exe."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Mshta","T1218.005","https://attack.mitre.org/techniques/T1218/005","Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code"
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Msiexec","T1218.007","https://attack.mitre.org/techniques/T1218/007","Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). Msiexec.exe is digitally signed by Microsoft."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Odbcconf","T1218.008","https://attack.mitre.org/techniques/T1218/008","Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. Odbcconf.exe is digitally signed by Microsoft."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Regsvcs/Regasm","T1218.009","https://attack.mitre.org/techniques/T1218/009","Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are digitally signed by Microsoft."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Regsvr32","T1218.010","https://attack.mitre.org/techniques/T1218/010","Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary."
"Defense Evasion","subtechnique","Signed Binary Proxy Execution","Rundll32","T1218.011","https://attack.mitre.org/techniques/T1218/011","Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads."
"Defense Evasion","technique","Signed Script Proxy Execution",,"T1216","https://attack.mitre.org/techniques/T1216","Adversaries may use scripts signed with trusted certificates to proxy execution of malicious files. Several Microsoft signed scripts that are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems."
"Defense Evasion","subtechnique","Signed Script Proxy Execution","PubPrn","T1216.001","https://attack.mitre.org/techniques/T1216/001","Adversaries may use the trusted PubPrn script to proxy execution of malicious files. This behavior may bypass signature validation restrictions and application control solutions that do not account for use of these scripts."
"Defense Evasion","technique","Subvert Trust Controls",,"T1553","https://attack.mitre.org/techniques/T1553","Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site."
"Defense Evasion","subtechnique","Subvert Trust Controls","Gatekeeper Bypass","T1553.001","https://attack.mitre.org/techniques/T1553/001","Adversaries may modify file attributes that signify programs are from untrusted sources to subvert Gatekeeper controls. In macOS and OS X, when applications or programs are downloaded from the internet, there is a special attribute set on the file called com.apple.quarantine. This attribute is read by Apple's Gatekeeper defense program at execution time and provides a prompt to the user to allow or deny execution."
"Defense Evasion","subtechnique","Subvert Trust Controls","Code Signing","T1553.002","https://attack.mitre.org/techniques/T1553/002","Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. Unlike Invalid Code Signature, this activity will result in a valid signature."
"Defense Evasion","subtechnique","Subvert Trust Controls","SIP and Trust Provider Hijacking","T1553.003","https://attack.mitre.org/techniques/T1553/003","Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function, which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature."
"Defense Evasion","subtechnique","Subvert Trust Controls","Install Root Certificate","T1553.004","https://attack.mitre.org/techniques/T1553/004","Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website."
"Defense Evasion","technique","Template Injection",,"T1221","https://attack.mitre.org/techniques/T1221","Adversaries may create or modify references in Office document templates to conceal malicious code or force authentication attempts. Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered. "
"Defense Evasion","technique","Traffic Signaling",,"T1205","https://attack.mitre.org/techniques/T1205","Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software."
"Defense Evasion","subtechnique","Traffic Signaling","Port Knocking","T1205.001","https://attack.mitre.org/techniques/T1205/001","Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software."
"Defense Evasion","technique","Trusted Developer Utilities Proxy Execution",,"T1127","https://attack.mitre.org/techniques/T1127","Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions."
"Defense Evasion","subtechnique","Trusted Developer Utilities Proxy Execution","MSBuild","T1127.001","https://attack.mitre.org/techniques/T1127/001","Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations."
"Defense Evasion","technique","Unused/Unsupported Cloud Regions",,"T1535","https://attack.mitre.org/techniques/T1535","Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure."
"Defense Evasion","technique","Use Alternate Authentication Material",,"T1550","https://attack.mitre.org/techniques/T1550","Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
"Defense Evasion","subtechnique","Use Alternate Authentication Material","Application Access Token","T1550.001","https://attack.mitre.org/techniques/T1550/001","Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials."
"Defense Evasion","subtechnique","Use Alternate Authentication Material","Pass the Hash","T1550.002","https://attack.mitre.org/techniques/T1550/002","Adversaries may ""pass the hash"" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems."
"Defense Evasion","subtechnique","Use Alternate Authentication Material","Pass the Ticket","T1550.003","https://attack.mitre.org/techniques/T1550/003","Adversaries may ""pass the ticket"" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system."
"Defense Evasion","subtechnique","Use Alternate Authentication Material","Web Session Cookie","T1550.004","https://attack.mitre.org/techniques/T1550/004","Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated."
"Defense Evasion","technique","Valid Accounts",,"T1078","https://attack.mitre.org/techniques/T1078","Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence."
"Defense Evasion","subtechnique","Valid Accounts","Default Accounts","T1078.001","https://attack.mitre.org/techniques/T1078/001","Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems or default factory/provider set accounts on other types of systems, software, or devices."
"Defense Evasion","subtechnique","Valid Accounts","Domain Accounts","T1078.002","https://attack.mitre.org/techniques/T1078/002","Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services."
"Defense Evasion","subtechnique","Valid Accounts","Local Accounts","T1078.003","https://attack.mitre.org/techniques/T1078/003","Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service."
"Defense Evasion","subtechnique","Valid Accounts","Cloud Accounts","T1078.004","https://attack.mitre.org/techniques/T1078/004","Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory."
"Defense Evasion","technique","Virtualization/Sandbox Evasion",,"T1497","https://attack.mitre.org/techniques/T1497","Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
"Defense Evasion","subtechnique","Virtualization/Sandbox Evasion","System Checks","T1497.001","https://attack.mitre.org/techniques/T1497/001","Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
"Defense Evasion","subtechnique","Virtualization/Sandbox Evasion","User Activity Based Checks","T1497.002","https://attack.mitre.org/techniques/T1497/002","Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
"Defense Evasion","subtechnique","Virtualization/Sandbox Evasion","Time Based Evasion","T1497.003","https://attack.mitre.org/techniques/T1497/003","Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time/"
"Defense Evasion","technique","XSL Script Processing",,"T1220","https://attack.mitre.org/techniques/T1220","Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. "
"Credential Access","tactic",,,"TA006","https://attack.mitre.org/tactics/TA0006/","The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals."
"Credential Access","technique","Brute Force",,"T1110","https://attack.mitre.org/techniques/T1110","Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes."
"Credential Access","subtechnique","Brute Force","Password Guessing","T1110.001","https://attack.mitre.org/techniques/T1110/001","Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts."
"Credential Access","subtechnique","Brute Force","Password Cracking","T1110.002","https://attack.mitre.org/techniques/T1110/002","Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping is used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network. The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access."
"Credential Access","subtechnique","Brute Force","Password Spraying","T1110.003","https://attack.mitre.org/techniques/T1110/003","Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords."
"Credential Access","subtechnique","Brute Force","Credential Stuffing","T1110.004","https://attack.mitre.org/techniques/T1110/004","Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts."
"Credential Access","technique","Credentials from Password Stores",,"T1555","https://attack.mitre.org/techniques/T1555","Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information."
"Credential Access","technique","Credentials from Password Stores","Keychain","T1555.001","https://attack.mitre.org/techniques/T1555/001","Adversaries may collect the keychain storage data from a system to acquire credentials. Keychains are the built-in way for macOS to keep track of users' passwords and credentials for many services and features such as WiFi passwords, websites, secure notes, certificates, and Kerberos. Keychain files are located in ~/Library/Keychains/,/Library/Keychains/, and /Network/Library/Keychains/. The security command-line utility, which is built into macOS by default, provides a useful way to manage these credentials."
"Credential Access","subtechnique","Credentials from Password Stores","Securityd Memory","T1555.002","https://attack.mitre.org/techniques/T1555/002","An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc."
"Credential Access","subtechnique","Credentials from Password Stores","Credentials from Web Browsers","T1555.003","https://attack.mitre.org/techniques/T1555/003","Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers."
"Credential Access","technique","Exploitation for Credential Access",,"T1212","https://attack.mitre.org/techniques/T1212","Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained."
"Credential Access","technique","Forced Authentication",,"T1187","https://attack.mitre.org/techniques/T1187","Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept."
"Credential Access","technique","Input Capture",,"T1056","https://attack.mitre.org/techniques/T1056","Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture)."
"Credential Access","subtechnique","Input Capture","Keylogging","T1056.001","https://attack.mitre.org/techniques/T1056/001","Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured."
"Credential Access","subtechnique","Input Capture","GUI Input Capture","T1056.002","https://attack.mitre.org/techniques/T1056/002","Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: Bypass User Access Control)."
"Credential Access","subtechnique","Input Capture","Web Portal Capture","T1056.003","https://attack.mitre.org/techniques/T1056/003","Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service."
"Credential Access","subtechnique","Input Capture","Credential API Hooking","T1056.004","https://attack.mitre.org/techniques/T1056/004","Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via hooks procedures ( intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs), import address table (IAT) hooking (use modifications to a process’s IAT, where pointers to imported API functions are stored), and inline hooking (overwrites the first bytes in an API function to redirect code flow)."
"Credential Access","technique","Man-in-the-Middle",,"T1557","https://attack.mitre.org/techniques/T1557","Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions."
"Credential Access","subtechnique","Man-in-the-Middle","LLMNR/NBT-NS Poisoning and SMB Relay","T1557.001","https://attack.mitre.org/techniques/T1557/001","By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials."
"Credential Access","technique","Modify Authentication Process",,"T1556","https://attack.mitre.org/techniques/T1556","Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows or pluggable authentication modules (PAM) on Unix-based systems, responsible for gathering, storing, and validating credentials. "
"Credential Access","subtechnique","Modify Authentication Process","Domain Controller Authentication","T1556.001","https://attack.mitre.org/techniques/T1556/001","Adversaries may patch the authentication process on a domain control to bypass the typical authentication mechanisms and enable access to accounts. "
"Credential Access","subtechnique","Modify Authentication Process","Password Filter DLL","T1556.002","https://attack.mitre.org/techniques/T1556/002","Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. "
"Credential Access","subtechnique","Modify Authentication Process","Pluggable Authentication Modules","T1556.003","https://attack.mitre.org/techniques/T1556/003","Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in /etc/passwd and /etc/shadow."
"Credential Access","technique","Network Sniffing",,"T1040","https://attack.mitre.org/techniques/T1040","Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
"Credential Access","technique","OS Credential Dumping",,"T1003","https://attack.mitre.org/techniques/T1003","Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information."
"Credential Access","subtechnique","OS Credential Dumping","LSASS Memory","T1003.001","https://attack.mitre.org/techniques/T1003/001","Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material."
"Credential Access","subtechnique","OS Credential Dumping","Security Account Manager","T1003.002","https://attack.mitre.org/techniques/T1003/002","Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access."
"Credential Access","subtechnique","OS Credential Dumping","NTDS","T1003.003","https://attack.mitre.org/techniques/T1003/003","Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in %SystemRoot%\NTDS\Ntds.dit of a domain controller."
"Credential Access","subtechnique","OS Credential Dumping","LSA Secrets","T1003.004","https://attack.mitre.org/techniques/T1003/004","Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets. LSA secrets can also be dumped from memory."
"Credential Access","subtechnique","OS Credential Dumping","Cached Domain Credentials","T1003.005","https://attack.mitre.org/techniques/T1003/005","Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable."
"Credential Access","subtechnique","OS Credential Dumping","DCSync","T1003.006","https://attack.mitre.org/techniques/T1003/006","Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync."
"Credential Access","subtechnique","OS Credential Dumping","Proc Filesystem","T1003.007","https://attack.mitre.org/techniques/T1003/007","Adversaries may gather credentials from information stored in the Proc filesystem or /proc. The Proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively."
"Credential Access","subtechnique","OS Credential Dumping","/etc/passwd and /etc/shadow","T1003.008","https://attack.mitre.org/techniques/T1003/008","Adversaries may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. Most modern Linux operating systems use a combination of /etc/passwd and /etc/shadow to store user account information including password hashes in /etc/shadow. By default, /etc/shadow is only readable by the root user."
"Credential Access","technique","Steal Application Access Token",,"T1528","https://attack.mitre.org/techniques/T1528","Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering and typically requires user action to grant access."
"Credential Access","technique","Steal or Forge Kerberos Tickets",,"T1558","https://attack.mitre.org/techniques/T1558","Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket."
"Credential Access","subtechnique","Steal or Forge Kerberos Tickets","Golden Ticket","T1558.001","https://attack.mitre.org/techniques/T1558/001","Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory."
"Credential Access","subtechnique","Steal or Forge Kerberos Tickets","Silver Ticket","T1558.002","https://attack.mitre.org/techniques/T1558/002","Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets."
"Credential Access","subtechnique","Steal or Forge Kerberos Tickets","Kerberoasting","T1558.003","https://attack.mitre.org/techniques/T1558/003","Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force."
"Credential Access","technique","Steal Web Session Cookie",,"T1539","https://attack.mitre.org/techniques/T1539","An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website."
"Credential Access","technique","Two-Factor Authentication Interception",,"T1111","https://attack.mitre.org/techniques/T1111","Adversaries may target two-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Use of two or multi-factor authentication (2FA or MFA) is recommended and provides a higher level of security than user names and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms."
"Credential Access","technique","Unsecured Credentials",,"T1552","https://attack.mitre.org/techniques/T1552","Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files/artifacts (e.g. Private Keys)."
"Credential Access","subtechnique","Unsecured Credentials","Credentials In Files","T1552.001","https://attack.mitre.org/techniques/T1552/001","Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords."
"Credential Access","subtechnique","Unsecured Credentials","Credentials in Registry","T1552.002","https://attack.mitre.org/techniques/T1552/002","Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons."
"Credential Access","subtechnique","Unsecured Credentials","Bash History","T1552.003","https://attack.mitre.org/techniques/T1552/003","Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the ""history"" utility. Once a user logs out, the history is flushed to the user’s .bash_history file. For each user, this file resides at the same location: ~/.bash_history. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials."
"Credential Access","subtechnique","Unsecured Credentials","Private Keys","T1552.004","https://attack.mitre.org/techniques/T1552/004","Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc."
"Credential Access","subtechnique","Unsecured Credentials","Cloud Instance Metadata API","T1552.005","https://attack.mitre.org/techniques/T1552/005","Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data."
"Credential Access","subtechnique","Unsecured Credentials","Group Policy Preferences","T1552.006","https://attack.mitre.org/techniques/T1552/006","Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts."
"Discovery","tactic",,,"TA0007","https://attack.mitre.org/tactics/TA0007/","The adversary is trying to figure out your environment. Discovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective."
"Discovery","technique","Account Discovery",,"T1087","https://attack.mitre.org/techniques/T1087","Adversaries may attempt to get a listing of accounts on a system or within an environment. This information can help adversaries determine which accounts exist to aid in follow-on behavior."
"Discovery","subtechnique","Account Discovery","Local Account","T1087.001","https://attack.mitre.org/techniques/T1087/001","Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior."
"Discovery","subtechnique","Account Discovery","Domain Account","T1087.002","https://attack.mitre.org/techniques/T1087/002","Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior."
"Discovery","subtechnique","Account Discovery","Email Account","T1087.003","https://attack.mitre.org/techniques/T1087/003","Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs)."
"Discovery","subtechnique","Account Discovery","Cloud Account","T1087.004","https://attack.mitre.org/techniques/T1087/004","Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider of SaaS application."
"Discovery","technique","Application Window Discovery",,"T1010","https://attack.mitre.org/techniques/T1010","Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger."
"Discovery","technique","Browser Bookmark Discovery",,"T1217","https://attack.mitre.org/techniques/T1217","Adversaries may enumerate browser bookmarks to learn more about compromised hosts. Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure."
"Discovery","technique","Cloud Service Dashboard",,"T1538","https://attack.mitre.org/techniques/T1538","An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports."
"Discovery","technique","Cloud Service Discovery",,"T1526","https://attack.mitre.org/techniques/T1526","An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc."
"Discovery","technique","Domain Trust Discovery",,"T1482","https://attack.mitre.org/techniques/T1482","Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain. Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting. Domain trusts can be enumerated using the DSEnumerateDomainTrusts() Win32 API call, .NET methods, and LDAP. The Windows utility Nltest is known to be used by adversaries to enumerate domain trusts."
"Discovery","technique","File and Directory Discovery",,"T1083","https://attack.mitre.org/techniques/T1083","Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","technique","Network Service Scanning",,"T1046","https://attack.mitre.org/techniques/T1046","Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans using tools that are brought onto a system."
"Discovery","technique","Network Share Discovery",,"T1135","https://attack.mitre.org/techniques/T1135","Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network."
"Discovery","technique","Network Sniffing",,"T1040","https://attack.mitre.org/techniques/T1040","Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data."
"Discovery","technique","Password Policy Discovery",,"T1201","https://attack.mitre.org/techniques/T1201","Adversaries may attempt to access detailed information about the password policy used within an enterprise network. Password policies for networks are a way to enforce complex passwords that are difficult to guess or crack through Brute Force. This would help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts)."
"Discovery","technique","Peripheral Device Discovery",,"T1120","https://attack.mitre.org/techniques/T1120","Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions."
"Discovery","technique","Permission Groups Discovery",,"T1069","https://attack.mitre.org/techniques/T1069","Adversaries may attempt to find group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions."
"Discovery","subtechnique","Permission Groups Discovery","Local Groups","T1069.001","https://attack.mitre.org/techniques/T1069/001","Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group."
"Discovery","subtechnique","Permission Groups Discovery","Domain Groups","T1069.002","https://attack.mitre.org/techniques/T1069/002","Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators."
"Discovery","subtechnique","Permission Groups Discovery","Cloud Groups","T1069.003","https://attack.mitre.org/techniques/T1069/003","Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group."
"Discovery","technique","Process Discovery",,"T1057","https://attack.mitre.org/techniques/T1057","Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","technique","Query Registry",,"T1012","https://attack.mitre.org/techniques/T1012","Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software."
"Discovery","technique","Remote System Discovery",,"T1018","https://attack.mitre.org/techniques/T1018","Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net. Adversaries may also use local host files (ex: C:\Windows\System32\Drivers\etc\hosts or /etc/hosts) in order to discover the hostname to IP address mappings of remote systems."
"Discovery","technique","Software Discovery",,"T1518","https://attack.mitre.org/techniques/T1518","Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","subtechnique","Software Discovery","Security Software Discovery","T1518.001","https://attack.mitre.org/techniques/T1518/001","Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","technique","System Information Discovery",,"T1082","https://attack.mitre.org/techniques/T1082","An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","technique","System Network Configuration Discovery",,"T1016","https://attack.mitre.org/techniques/T1016","Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route."
"Discovery","technique","System Network Connections Discovery",,"T1049","https://attack.mitre.org/techniques/T1049","Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network."
"Discovery","technique","System Owner/User Discovery",,"T1033","https://attack.mitre.org/techniques/T1033","Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","technique","System Service Discovery",,"T1007","https://attack.mitre.org/techniques/T1007","Adversaries may try to get information about registered services. Commands that may obtain information about services using operating system utilities are ""sc,"" ""tasklist /svc"" using Tasklist, and ""net start"" using Net, but adversaries may also use other tools as well. Adversaries may use the information from System Service Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions."
"Discovery","technique","System Time Discovery",,"T1124","https://attack.mitre.org/techniques/T1124","An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network."
"Discovery","technique","Virtualization/Sandbox Evasion",,"T1497","https://attack.mitre.org/techniques/T1497","Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
"Discovery","subtechnique","Virtualization/Sandbox Evasion","System Checks","T1497.001","https://attack.mitre.org/techniques/T1497/001","Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
"Discovery","subtechnique","Virtualization/Sandbox Evasion","User Activity Based Checks","T1497.002","https://attack.mitre.org/techniques/T1497/002","Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors."
"Discovery","subtechnique","Virtualization/Sandbox Evasion","Time Based Evasion","T1497.003","https://attack.mitre.org/techniques/T1497/003","Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time/"
"Lateral Movement","tactic",,,"TA0008","https://attack.mitre.org/tactics/TA0008/","The adversary is trying to move through your environment. Lateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier."
"Lateral Movement","technique","Exploitation of Remote Services",,"T1210","https://attack.mitre.org/techniques/T1210","Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system."
"Lateral Movement","technique","Internal Spearphishing",,"T1534","https://attack.mitre.org/techniques/T1534","Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged attack where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt."
"Lateral Movement","technique","Lateral Tool Transfer",,"T1570","https://attack.mitre.org/techniques/T1570","Adversaries may transfer tools or other files between systems in a compromised environment. Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files laterally between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB to connected network shares or with authenticated connections with SMB/Windows Admin Shares or Remote Desktop Protocol. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp."
"Lateral Movement","technique","Remote Service Session Hijacking",,"T1563","https://attack.mitre.org/techniques/T1563","Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service."
"Lateral Movement","subtechnique","Remote Service Session Hijacking","SSH Hijacking","T1563.001","https://attack.mitre.org/techniques/T1563/001","Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair."
"Lateral Movement","subtechnique","Remote Service Session Hijacking","RDP Hijacking","T1563.002","https://attack.mitre.org/techniques/T1563/002","Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS)."
"Lateral Movement","technique","Remote Services",,"T1021","https://attack.mitre.org/techniques/T1021","Adversaries may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user."
"Lateral Movement","subtechnique","Remote Services","Remote Desktop Protocol","T1021.001","https://attack.mitre.org/techniques/T1021/001","Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user."
"Lateral Movement","subtechnique","Remote Services","SMB/Windows Admin Shares","T1021.002","https://attack.mitre.org/techniques/T1021/002","Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user."
"Lateral Movement","subtechnique","Remote Services","Distributed Component Object Model","T1021.003","https://attack.mitre.org/techniques/T1021/003","Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user."
"Lateral Movement","subtechnique","Remote Services","SSH","T1021.004","https://attack.mitre.org/techniques/T1021/004","Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user."
"Lateral Movement","subtechnique","Remote Services","VNC","T1021.005","https://attack.mitre.org/techniques/T1021/005","Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). The adversary may then perform actions as the logged-on user."
"Lateral Movement","subtechnique","Remote Services","Windows Remote Management","T1021.006","https://attack.mitre.org/techniques/T1021/006","Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user."
"Lateral Movement","technique","Replication Through Removable Media",,"T1091","https://attack.mitre.org/techniques/T1091","Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself."
"Lateral Movement","technique","Software Deployment Tools",,"T1072","https://attack.mitre.org/techniques/T1072","Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, VNC, HBSS, Altiris, etc.)."
"Lateral Movement","technique","Taint Shared Content",,"T1080","https://attack.mitre.org/techniques/T1080","Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories"
"Lateral Movement","technique","Use Alternate Authentication Material",,"T1550","https://attack.mitre.org/techniques/T1550","Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls."
"Lateral Movement","subtechnique","Use Alternate Authentication Material","Application Access Token","T1550.001","https://attack.mitre.org/techniques/T1550/001","Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials."
"Lateral Movement","subtechnique","Use Alternate Authentication Material","Pass the Hash","T1550.002","https://attack.mitre.org/techniques/T1550/002","Adversaries may ""pass the hash"" using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash. In this technique, valid password hashes for the account being used are captured using a Credential Access technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems."
"Lateral Movement","subtechnique","Use Alternate Authentication Material","Pass the Ticket","T1550.003","https://attack.mitre.org/techniques/T1550/003","Adversaries may ""pass the ticket"" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system."
"Lateral Movement","subtechnique","Use Alternate Authentication Material","Web Session Cookie","T1550.004","https://attack.mitre.org/techniques/T1550/004","Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated."
"Collection","tactic",,,"TA0009","https://attack.mitre.org/tactics/TA0009/","The adversary is trying to gather data of interest to their goal. Collection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input."
"Collection","technique","Archive Collected Data ",,"T1560","https://attack.mitre.org/techniques/T1560","An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender."
"Collection","subtechnique","Archive Collected Data ","Archive via Utility","T1560.001","https://attack.mitre.org/techniques/T1560/001","An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities. Many utilities exist that can archive data, including 7-Zip, WinRAR, and WinZip. Most utilities include functionality to encrypt and/or compress data."
"Collection","subtechnique","Archive Collected Data ","Archive via Library","T1560.002","https://attack.mitre.org/techniques/T1560/002","An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and/or compress data."
"Collection","subtechnique","Archive Collected Data ","Archive via Custom Method","T1560.003","https://attack.mitre.org/techniques/T1560/003","An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used."
"Collection","technique","Audio Capture",,"T1123","https://attack.mitre.org/techniques/T1123","An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information."
"Collection","technique","Automated Collection",,"T1119","https://attack.mitre.org/techniques/T1119","Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools."
"Collection","technique","Clipboard Data",,"T1115","https://attack.mitre.org/techniques/T1115","Adversaries may collect data stored in the clipboard from users copying information within or between applications."
"Collection","technique","Data from Cloud Storage Object",,"T1530","https://attack.mitre.org/techniques/T1530","Adversaries may access data objects from improperly secured cloud storage."
"Collection","technique","Data from Information Repositories",,"T1213","https://attack.mitre.org/techniques/T1213","Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information."
"Collection","technique","Data from Information Repositories",,"T1213.001","https://attack.mitre.org/techniques/T1213/001","Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information."
"Collection","technique","Data from Information Repositories",,"T1213.002","https://attack.mitre.org/techniques/T1213/002","Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems."
"Collection","technique","Data from Local System",,"T1005","https://attack.mitre.org/techniques/T1005","Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration."
"Collection","technique","Data from Network Shared Drive",,"T1039","https://attack.mitre.org/techniques/T1039","Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information."
"Collection","technique","Data from Removable Media",,"T1025","https://attack.mitre.org/techniques/T1025","Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information."
"Collection","technique","Data Staged",,"T1074","https://attack.mitre.org/techniques/T1074","Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location."
"Collection","subtechnique","Data Staged","Local Data Staging","T1074.001","https://attack.mitre.org/techniques/T1074/001","Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location."
"Collection","subtechnique","Data Staged","Remote Data Staging","T1074.002","https://attack.mitre.org/techniques/T1074/002","Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location."
"Collection","technique","Email Collection",,"T1114","https://attack.mitre.org/techniques/T1114","Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients."
"Collection","subtechnique","Email Collection","Local Email Collection","T1114.001","https://attack.mitre.org/techniques/T1114/001","Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files."
"Collection","subtechnique","Email Collection","Remote Email Collection","T1114.002","https://attack.mitre.org/techniques/T1114/002","Adversaries may target an Exchange server or Office 365 to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services or Office 365 to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords."
"Collection","subtechnique","Email Collection","Email Forwarding Rule","T1114.003","https://attack.mitre.org/techniques/T1114/003","Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations. Outlook and Outlook Web App (OWA) allow users to create inbox rules for various email functions, including forwarding to a different recipient. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes."
"Collection","technique","Input Capture",,"T1056","https://attack.mitre.org/techniques/T1056","Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture)."
"Collection","subtechnique","Input Capture","Keylogging","T1056.001","https://attack.mitre.org/techniques/T1056/001","Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured."
"Collection","subtechnique","Input Capture","GUI Input Capture","T1056.002","https://attack.mitre.org/techniques/T1056/002","Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: Bypass User Access Control)."
"Collection","subtechnique","Input Capture","Web Portal Capture","T1056.003","https://attack.mitre.org/techniques/T1056/003","Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service."
"Collection","subtechnique","Input Capture","Credential API Hooking","T1056.004","https://attack.mitre.org/techniques/T1056/004","Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via hooks procedures ( intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs), import address table (IAT) hooking (use modifications to a process’s IAT, where pointers to imported API functions are stored), and inline hooking (overwrites the first bytes in an API function to redirect code flow)."
"Collection","technique","Man-in-the-Middle",,"T1557","https://attack.mitre.org/techniques/T1557","Adversaries may attempt to position themselves between two or more networked devices using a man-in-the-middle (MiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions."
"Collection","subtechnique","Man-in-the-Middle","LLMNR/NBT-NS Poisoning and SMB Relay","T1557.001","https://attack.mitre.org/techniques/T1557/001","By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials."
"Collection","technique","Screen Capture",,"T1113","https://attack.mitre.org/techniques/T1113","Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture."
"Collection","technique","Video Capture",,"T1125","https://attack.mitre.org/techniques/T1125","An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files."
"Command and Control","tactic",,,"TA0011","https://attack.mitre.org/tactics/TA0011/","The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses."
"Command and Control","technique","Application Layer Protocol",,"T1071","https://attack.mitre.org/techniques/T1071","Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
"Command and Control","subtechnique","Application Layer Protocol","Web Protocols","T1071.001","https://attack.mitre.org/techniques/T1071/001","Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
"Command and Control","subtechnique","Application Layer Protocol","File Transfer Protocols","T1071.002","https://attack.mitre.org/techniques/T1071/002","Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
"Command and Control","subtechnique","Application Layer Protocol","Mail Protocols","T1071.003","https://attack.mitre.org/techniques/T1071/003","Adversaries may communicate using application layer protocols associated with electronic map delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
"Command and Control","subtechnique","Application Layer Protocol","DNS","T1071.004","https://attack.mitre.org/techniques/T1071/004","Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server."
"Command and Control","technique","Communication Through Removable Media",,"T1092","https://attack.mitre.org/techniques/T1092","Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by Replication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access."
"Command and Control","technique","Data Encoding",,"T1132","https://attack.mitre.org/techniques/T1132","Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems. Some data encoding systems may also result in data compression, such as gzip."
"Command and Control","subtechnique","Data Encoding","Standard Encoding","T1132.001","https://attack.mitre.org/techniques/T1132/001","Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip."
"Command and Control","subtechnique","Data Encoding","Non-Standard Encoding","T1132.002","https://attack.mitre.org/techniques/T1132/002","Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request."
"Command and Control","technique","Data Obfuscation",,"T1001","https://attack.mitre.org/techniques/T1001","Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols."
"Command and Control","subtechnique","Data Obfuscation","Junk Data","T1001.001","https://attack.mitre.org/techniques/T1001/001","Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters."
"Command and Control","subtechnique","Data Obfuscation","Steganography","T1001.002","https://attack.mitre.org/techniques/T1001/002","Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control."
"Command and Control","subtechnique","Data Obfuscation","Protocol Impersonation","T1001.003","https://attack.mitre.org/techniques/T1001/003","Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic."
"Command and Control","technique","Dynamic Resolution",,"T1568","https://attack.mitre.org/techniques/T1568","Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control."
"Command and Control","subtechnique","Dynamic Resolution","Fast Flux DNS","T1568.001","https://attack.mitre.org/techniques/T1568/001","Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record."
"Command and Control","subtechnique","Dynamic Resolution","Domain Generation Algorithms","T1568.002","https://attack.mitre.org/techniques/T1568/002","Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions."
"Command and Control","subtechnique","Dynamic Resolution","DNS Calculation","T1568.003","https://attack.mitre.org/techniques/T1568/003","Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel."
"Command and Control","technique","Encrypted Channel",,"T1573","https://attack.mitre.org/techniques/T1573","Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files."
"Command and Control","subtechnique","Encrypted Channel","Symmetric Cryptography","T1573.001","https://attack.mitre.org/techniques/T1573/001","Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4."
"Command and Control","subtechnique","Encrypted Channel","Asymmetric Cryptography","T1573.002","https://attack.mitre.org/techniques/T1573/002","Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal."
"Command and Control","technique","Fallback Channels",,"T1008","https://attack.mitre.org/techniques/T1008","Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds."
"Command and Control","technique","Ingress Tool Transfer",,"T1105","https://attack.mitre.org/techniques/T1105","Adversaries may transfer tools or other files from an external system into a compromised environment. Files may be copied from an external adversary controlled system through the command and control channel to bring tools into the victim network or through alternate protocols with another tool such as FTP. Files can also be copied over on Mac and Linux with native tools like scp, rsync, and sftp."
"Command and Control","technique","Multi-Stage Channels",,"T1104","https://attack.mitre.org/techniques/T1104","Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult."
"Command and Control","technique","Non-Application Layer Protocol",,"T1095","https://attack.mitre.org/techniques/T1095","Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL)."
"Command and Control","technique","Non-Standard Port",,"T1571","https://attack.mitre.org/techniques/T1571","Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data."
"Command and Control","technique","Protocol Tunneling",,"T1572","https://attack.mitre.org/techniques/T1572","Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet."
"Command and Control","technique","Proxy",,"T1090","https://attack.mitre.org/techniques/T1090","Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic."
"Command and Control","subtechnique","Proxy","Internal Proxy","T1090.001","https://attack.mitre.org/techniques/T1090/001","Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment."
"Command and Control","subtechnique","Proxy","External Proxy","T1090.002","https://attack.mitre.org/techniques/T1090/002","Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion."
"Command and Control","subtechnique","Proxy","Multi-hop Proxy","T1090.003","https://attack.mitre.org/techniques/T1090/003","To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source."
"Command and Control","subtechnique","Proxy","Domain Fronting","T1090.004","https://attack.mitre.org/techniques/T1090/004","Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, ""domainless"" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored)."
"Command and Control","technique","Remote Access Software",,"T1219","https://attack.mitre.org/techniques/T1219","An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries."
"Command and Control","technique","Traffic Signaling",,"T1205","https://attack.mitre.org/techniques/T1205","Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software."
"Command and Control","subtechnique","Traffic Signaling","Port Knocking","T1205.001","https://attack.mitre.org/techniques/T1205/001","Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software."
"Command and Control","technique","Web Service",,"T1102","https://attack.mitre.org/techniques/T1102","Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection."
"Command and Control","subtechnique","Web Service","Dead Drop Resolver","T1102.001","https://attack.mitre.org/techniques/T1102/001","Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers."
"Command and Control","subtechnique","Web Service","Bidirectional Communication","T1102.002","https://attack.mitre.org/techniques/T1102/002","Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet."
"Command and Control","subtechnique","Web Service","One-Way Communication","T1102.003","https://attack.mitre.org/techniques/T1102/003","Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response."
"Exfiltration","tactic",,,"TA0010","https://attack.mitre.org/tactics/TA0010/","The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission."
"Exfiltration","technique","Automated Exfiltration",,"T1020","https://attack.mitre.org/techniques/T1020","Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection."
"Exfiltration","technique","Data Transfer Size Limits",,"T1030","https://attack.mitre.org/techniques/T1030","An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts."
"Exfiltration","technique","Exfiltration Over Alternative Protocol",,"T1048","https://attack.mitre.org/techniques/T1048","Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
"Exfiltration","subtechnique","Exfiltration Over Alternative Protocol","Exfiltration Over Symmetric Encrypted Non-C2 Protocol","T1048.001","https://attack.mitre.org/techniques/T1048/001","Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
"Exfiltration","subtechnique","Exfiltration Over Alternative Protocol","Exfiltration Over Asymmetric Encrypted Non-C2 Protocol","T1048.002","https://attack.mitre.org/techniques/T1048/002","Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
"Exfiltration","subtechnique","Exfiltration Over Alternative Protocol","Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol","T1048.003","https://attack.mitre.org/techniques/T1048/003","Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server."
"Exfiltration","technique","Exfiltration Over C2 Channel",,"T1041","https://attack.mitre.org/techniques/T1041","Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications."
"Exfiltration","technique","Exfiltration Over Other Network Medium",,"T1011","https://attack.mitre.org/techniques/T1011","Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel."
"Exfiltration","subtechnique","Exfiltration Over Other Network Medium","Exfiltration Over Bluetooth","T1011.001","https://attack.mitre.org/techniques/T1011/001","Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an attacker may opt to exfiltrate data using a Bluetooth communication channel."
"Exfiltration","technique","Exfiltration Over Physical Medium",,"T1052","https://attack.mitre.org/techniques/T1052","Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems."
"Exfiltration","subtechnique","Exfiltration Over Physical Medium","Exfiltration over USB","T1052.001","https://attack.mitre.org/techniques/T1052/001","Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems."
"Exfiltration","technique","Exfiltration Over Web Service",,"T1567","https://attack.mitre.org/techniques/T1567","Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services."
"Exfiltration","subtechnique","Exfiltration Over Web Service","Exfiltration to Code Repository","T1567.001","https://attack.mitre.org/techniques/T1567/001","Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection."
"Exfiltration","subtechnique","Exfiltration Over Web Service","Exfiltration to Cloud Storage","T1567.002","https://attack.mitre.org/techniques/T1567/002","Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet."
"Exfiltration","technique","Scheduled Transfer",,"T1029","https://attack.mitre.org/techniques/T1029","Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability."
"Exfiltration","technique","Transfer Data to Cloud Account",,"T1537","https://attack.mitre.org/techniques/T1537","Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection."
"Impact","tactic",,,"TA0040","https://attack.mitre.org/tactics/TA0040/","The adversary is trying to manipulate, interrupt, or destroy your systems and data. Impact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach."
"Impact","technique","Account Access Removal",,"T1531","https://attack.mitre.org/techniques/T1531","Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts."
"Impact","technique","Data Destruction",,"T1485","https://attack.mitre.org/techniques/T1485","Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such as del and rm often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from Disk Content Wipe and Disk Structure Wipe because individual files are destroyed rather than sections of a storage disk or the disk's logical structure."
"Impact","technique","Data Encrypted for Impact",,"T1486","https://attack.mitre.org/techniques/T1486","Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted. In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted. In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR."
"Impact","technique","Data Manipulation",,"T1565","https://attack.mitre.org/techniques/T1565","Adversaries may insert, delete, or manipulate data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making."
"Impact","subtechnique","Data Manipulation","Stored Data Manipulation","T1565.001","https://attack.mitre.org/techniques/T1565/001","Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
"Impact","subtechnique","Data Manipulation","Transmitted Data Manipulation","T1565.002","https://attack.mitre.org/techniques/T1565/002","Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
"Impact","subtechnique","Data Manipulation","Runtime Data Manipulation","T1565.003","https://attack.mitre.org/techniques/T1565/003","Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making."
"Impact","technique","Defacement",,"T1491","https://attack.mitre.org/techniques/T1491","Adversaries may modify visual content available internally or externally to an enterprise network. Reasons for Defacement include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages."
"Impact","subtechnique","Defacement","Internal Defacement","T1491.001","https://attack.mitre.org/techniques/T1491/001","An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of Internal Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished."
"Impact","subtechnique","Defacement","External Defacement","T1491.002","https://attack.mitre.org/techniques/T1491/002","An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. External Defacement may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise."
"Impact","technique","Disk Wipe",,"T1561","https://attack.mitre.org/techniques/T1561","Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted."
"Impact","subtechnique","Disk Wipe","Disk Content Wipe","T1561.001","https://attack.mitre.org/techniques/T1561/001","Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources."
"Impact","subtechnique","Disk Wipe","Disk Structure Wipe","T1561.002","https://attack.mitre.org/techniques/T1561/002","Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources."
"Impact","technique","Endpoint Denial of Service",,"T1499","https://attack.mitre.org/techniques/T1499","Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion."
"Impact","subtechnique","Endpoint Denial of Service","OS Exhaustion Flood","T1499.001","https://attack.mitre.org/techniques/T1499/001","Adversaries may target the operating system (OS) for a DoS attack, since the (OS) is responsible for managing the finite resources on a system. These attacks do not need to exhaust the actual resources on a system since they can simply exhaust the limits that an OS self-imposes to prevent the entire system from being overwhelmed by excessive demands on its capacity."
"Impact","subtechnique","Endpoint Denial of Service","Service Exhaustion Flood","T1499.002","https://attack.mitre.org/techniques/T1499/002","Adversaries may target the different network services provided by systems to conduct a DoS. Adversaries often target DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service."
"Impact","subtechnique","Endpoint Denial of Service","Application Exhaustion Flood","T1499.003","https://attack.mitre.org/techniques/T1499/003","Adversaries may target resource intensive features of web applications to cause a denial of service (DoS). Specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself."
"Impact","subtechnique","Endpoint Denial of Service","Application or System Exploitation","T1499.004","https://attack.mitre.org/techniques/T1499/004","Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent DoS condition."
"Impact","technique","Firmware Corruption",,"T1495","https://attack.mitre.org/techniques/T1495","Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices could include the motherboard, hard drive, or video cards."
"Impact","technique","Inhibit System Recovery",,"T1490","https://attack.mitre.org/techniques/T1490","Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of Data Destruction and Data Encrypted for Impact."
"Impact","technique","Network Denial of Service",,"T1498","https://attack.mitre.org/techniques/T1498","Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion."
"Impact","subtechnique","Network Denial of Service","Direct Flood","T1498.001","https://attack.mitre.org/techniques/T1498/001","Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. Direct Network Flood are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well."
"Impact","subtechnique","Network Denial of Service","Reflection Amplification","T1498.002","https://attack.mitre.org/techniques/T1498/002","Adversaries may attempt to cause a denial of service by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflector may be used to focus traffic on the target."
"Impact","technique","Resource Hijacking",,"T1496","https://attack.mitre.org/techniques/T1496","Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems which may impact system and/or hosted service availability."
"Impact","technique","Service Stop",,"T1489","https://attack.mitre.org/techniques/T1489","Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment."
"Impact","technique","System Shutdown/Reboot",,"T1529","https://attack.mitre.org/techniques/T1529","Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer. Shutting down or rebooting systems may disrupt access to computer resources for legitimate users."
